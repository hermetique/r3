;---r3 compiler code.asm; r3/test/testasm.r3;--------------------------; :windows  |1001482|e     . I| calls:1 niv:1 len:196 (  --  )w43:;---------OPT;---------ANA;---------GEN; "KERNEL32.DLL"; OPTS LOADLIBcinvoke64 LoadLibraryA,str1C5C; DUPadd rbp,8mov [rbp],rax; "AllocConsole"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1C79; 'sys-AllocConsole; OPTAV !mov qword[w0],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "ExitProcess"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1CA9; 'sys-ExitProcess; OPTAV !mov qword[w1],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetStdHandle"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1CD8; 'sys-GetStdHandle; OPTAV !mov qword[w2],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "ReadFile"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1D0A; 'sys-ReadFile; OPTAV !mov qword[w3],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "WriteFile"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1D32; 'sys-WriteFile; OPTAV !mov qword[w4],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetConsoleMode"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1D5E; 'sys-GetConsoleMode; OPTAV !mov qword[w5],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SetConsoleMode"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1D92; 'sys-SetConsoleMode; OPTAV !mov qword[w6],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "ReadConsoleInputW"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1DC6; 'sys-ReadConsoleInput; OPTAV !mov qword[w7],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "FlushConsoleInputBuffer"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1DFF; 'sys-FlushConsoleInputBuffer; OPTAV !mov qword[w8],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "Sleep"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1E45; 'sys-Sleep; OPTAV !mov qword[w9],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "WaitForSingleObject"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1E67; 'sys-WaitForSingleObject; OPTAV !mov qword[wA],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetLastError"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1EA6; 'sys-GetLastError; OPTAV !mov qword[wB],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "CreateFileA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1ED7; 'sys-CreateFile; OPTAV !mov qword[wC],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "CloseHandle"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1F05; 'sys-CloseHandle; OPTAV !mov qword[wD],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "FlushFileBuffers"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1F33; 'sys-FlushFileBuffers; OPTAV !mov qword[wE],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "DeleteFileA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1F6B; 'sys-DeleteFile; OPTAV !mov qword[wF],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "MoveFileA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1F98; 'sys-MoveFile; OPTAV !mov qword[w10],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SetFilePointer"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1FC1; 'sys-SetFilePointer; OPTAV !mov qword[w11],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SetEndOfFile"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1FF5; 'sys-SetEndOfFile; OPTAV !mov qword[w12],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetFileSize"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2025; 'sys-GetFileSize; OPTAV !mov qword[w13],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetProcessHeap"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2054; 'sys-GetProcessHeap; OPTAV !mov qword[w14],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "HeapAlloc"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2088; 'sys-HeapAlloc; OPTAV !mov qword[w15],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "HeapFree"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str20B2; 'sys-HeapFree; OPTAV !mov qword[w16],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "HeapReAlloc"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str20DA; 'sys-HeapReAlloc; OPTAV !mov qword[w17],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetLocalTime"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2109; 'sys-GetLocalTime; OPTAV !mov qword[w19],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "FindFirstFileA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2139; 'sys-FindFirstFile; OPTAV !mov qword[w1A],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "FindNextFileA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str216C; 'sys-FindNextFile; OPTAV !mov qword[w1B],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "FindClose"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str219D; 'sys-FindClose; OPTAV !mov qword[w1C],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "CreateProcessA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str21C8; 'sys-CreateProcess; OPTAV !mov qword[w1D],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetTickCount"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str21FB; 'sys-GetTickCount; OPTAV !mov qword[w18],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetConsoleScreenBufferInfo"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str222B; 'sys-GetConsoleScreenBufferInfo; OPTAV !mov qword[w1E],raxmov rax,[rbp]sub rbp,8; DROPmov rax,[rbp]sub rbp,8; sys-AllocConsoleadd rbp,8mov [rbp],raxmov rax,qword[w0]; SYS0PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20CALL raxadd RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; -10add rbp,8mov [rbp],raxmov rax,-10; sys-GetStdHandleadd rbp,8mov [rbp],raxmov rax,qword[w2]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rcx,[rbp]call raxadd RSP,$20sub rbp,8POP RSP; 'stdin; OPTAV !mov qword[w40],raxmov rax,[rbp]sub rbp,8; -11add rbp,8mov [rbp],raxmov rax,-11; sys-GetStdHandleadd rbp,8mov [rbp],raxmov rax,qword[w2]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rcx,[rbp]call raxadd RSP,$20sub rbp,8POP RSP; 'stdout; OPTAV !mov qword[w41],raxmov rax,[rbp]sub rbp,8; -12add rbp,8mov [rbp],raxmov rax,-12; sys-GetStdHandleadd rbp,8mov [rbp],raxmov rax,qword[w2]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rcx,[rbp]call raxadd RSP,$20sub rbp,8POP RSP; 'stderr; OPTAV !mov qword[w42],raxmov rax,[rbp]sub rbp,8; stdinadd rbp,8mov [rbp],raxmov rax,qword[w40]; 'console-modeadd rbp,8mov [rbp],raxmov rax,w3E; sys-GetConsoleModeadd rbp,8mov [rbp],raxmov rax,qword[w5]; SYS2PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rdx,[rbp]mov rcx,[rbp-1*8]call raxadd RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; stdinadd rbp,8mov [rbp],raxmov rax,qword[w40]; console-modeadd rbp,8mov [rbp],raxmov rax,qword[w3E]; $FFFFFFFFFFFFFFE6 ; calc; OPTC ANDand rax,-26; sys-SetConsoleModeadd rbp,8mov [rbp],raxmov rax,qword[w6]; SYS2PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rdx,[rbp]mov rcx,[rbp-1*8]call raxadd RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; stdoutadd rbp,8mov [rbp],raxmov rax,qword[w41]; 'console-modeadd rbp,8mov [rbp],raxmov rax,w3E; sys-GetConsoleModeadd rbp,8mov [rbp],raxmov rax,qword[w5]; SYS2PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rdx,[rbp]mov rcx,[rbp-1*8]call raxadd RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; stdoutadd rbp,8mov [rbp],raxmov rax,qword[w41]; console-modeadd rbp,8mov [rbp],raxmov rax,qword[w3E]; $4; OPTN ORor rax,4; sys-SetConsoleModeadd rbp,8mov [rbp],raxmov rax,qword[w6]; SYS2PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rdx,[rbp]mov rcx,[rbp-1*8]call raxadd RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; sys-GetProcessHeapadd rbp,8mov [rbp],raxmov rax,qword[w14]; SYS0PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20CALL raxadd RSP,$20POP RSP; 'process-heap; OPTAV !mov qword[w3F],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :10/mod  |3082|e     .  | calls:3 niv:0 len:49 ( a -- bc )w7E:;---------OPT;---------ANA;---------GEN; DUPadd rbp,8mov [rbp],rax; 1; OPTN >>sar rax,1; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 2; OPTN >>sar rax,2; +add rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 4; OPTN >>sar rax,4; +add rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 8; OPTN >>sar rax,8; +add rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 16; OPTN >>sar rax,16; +add rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 32; OPTN >>sar rax,32; +add rax,[rbp]sub rbp,8; 3; OPTN >>sar rax,3; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; DUPadd rbp,8mov [rbp],rax; 2; OPTN <<shl rax,2; +add rax,[rbp]sub rbp,8; 1; OPTN <<shl rax,1; -neg raxadd rax,[rbp]sub rbp,8; 6; OPTN +add rax,6; 4; OPTN >>sar rax,4; +add rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; DUPadd rbp,8mov [rbp],rax; 2; OPTN <<shl rax,2; +add rax,[rbp]sub rbp,8; 1; OPTN <<shl rax,1; -neg raxadd rax,[rbp]sub rbp,8; ;ret;--------------------------; :count  |2082|e     .  | calls:2 niv:0 len:13 ( a -- bc )w91:;---------OPT;---------ANA;---------GEN; 0add rbp,8mov [rbp],raxxor rax,rax; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; (_i0:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o0;; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; 1; OPTN +add rax,1; SWAPxchg rax,[rbp]; )jmp _i0_o0:; 2DROPmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :sign  |2090|l  ;  .  | calls:2 niv:0 len:12 ( ab -- c )w9D:;---------OPT;---------ANA;---------GEN; -?or rax,raxjns _o1; (; DROPmov rax,[rbp]sub rbp,8; $2dadd rbp,8mov [rbp],raxmov rax,45; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; ;ret; )_o1:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; ;ret;--------------------------; :.d  |1003492|e  ;  . I| calls:3 niv:1 len:26 ( a -- b )w9E:;---------OPT;---------ANA;---------GEN; DUPadd rbp,8mov [rbp],rax; ABScqoadd rax,rdxxor rax,rdx; -?or rax,raxjns _o2; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; "-9223372036854775808"add rbp,8mov [rbp],raxmov rax,str2D49; ;ret; )_o2:; 'mbuffadd rbp,8mov [rbp],raxmov rax,w9B; 64; OPTN +add rax,64; 0add rbp,8mov [rbp],raxxor rax,rax; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; (_i3:; 10/modcall w7E; $30; OPTN +add rax,48; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; 1?or rax,raxjz _o3;; )jmp _i3_o3:; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; signjmp w9D; ;;--------------------------; :.b  |1001482|e     . I| calls:1 niv:1 len:22 ( a -- b )w9F:;---------OPT;---------ANA;---------GEN; 'mbuffadd rbp,8mov [rbp],raxmov rax,w9B; 64; OPTN +add rax,64; 0add rbp,8mov [rbp],raxxor rax,rax; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; (_i4:; DUPadd rbp,8mov [rbp],rax; $1; OPTN ANDand rax,1; $30; OPTN +add rax,48; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; 1; OPTN >>>shr rax,1; 1?or rax,raxjz _o4;; )jmp _i4_o4:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; ;ret;--------------------------; :.h  |1001482|e     . I| calls:1 niv:1 len:28 ( a -- b )wA0:;---------OPT;---------ANA;---------GEN; 'mbuffadd rbp,8mov [rbp],raxmov rax,w9B; 64; OPTN +add rax,64; 0add rbp,8mov [rbp],raxxor rax,rax; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; (_i5:; DUPadd rbp,8mov [rbp],rax; $f; OPTN ANDand rax,15; $30; OPTN +add rax,48; $39; OPTN >?cmp rax,57jle _o6; (; 7; OPTN +add rax,7; )_o6:; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; 4; OPTN >>>shr rax,4; 1?or rax,raxjz _o5;; )jmp _i5_o5:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; ;ret;--------------------------; :.o  |1001482|e     . I| calls:1 niv:1 len:22 ( a -- b )wA1:;---------OPT;---------ANA;---------GEN; 'mbuffadd rbp,8mov [rbp],raxmov rax,w9B; 64; OPTN +add rax,64; 0add rbp,8mov [rbp],raxxor rax,rax; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; (_i7:; DUPadd rbp,8mov [rbp],rax; $7; OPTN ANDand rax,7; $30; OPTN +add rax,48; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; 3; OPTN >>>shr rax,3; 1?or rax,raxjz _o7;; )jmp _i7_o7:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; ;ret;--------------------------; :.f  |1001482|e     . I| calls:1 niv:1 len:49 ( a -- b )wA2:;---------OPT;---------ANA;---------GEN; 'mbuffadd rbp,8mov [rbp],raxmov rax,w9B; 64; OPTN +add rax,64; 0add rbp,8mov [rbp],raxxor rax,rax; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; 1; OPTN -sub rax,1; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; $ffff; OPTN ANDand rax,65535; 10000add rbp,8mov [rbp],raxmov rax,10000; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; 10000; OPTN +add rax,10000; (_i8:; 10/modcall w7E; $30; OPTN +add rax,48; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; 1?or rax,raxjz _o8;; )jmp _i8_o8:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; $2eadd rbp,8mov [rbp],raxmov rax,46; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; 1; OPTN -sub rax,1; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; ABScqoadd rax,rdxxor rax,rdx; 16; OPTN >>sar rax,16; (_i9:; 10/modcall w7E; $30; OPTN +add rax,48; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; 1?or rax,raxjz _o9;; )jmp _i9_o9:; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; signjmp w9D; ;;--------------------------; :time  |1001482|e     . I| calls:1 niv:1 len:26 (  -- a )wB1:;---------OPT;---------ANA;---------GEN; 'sistimeadd rbp,8mov [rbp],raxmov rax,wB0; sys-GetLocalTimeadd rbp,8mov [rbp],raxmov rax,qword[w19]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rcx,[rbp]call raxadd RSP,$20sub rbp,8POP RSP; DROPmov rax,[rbp]sub rbp,8; 'sistimeadd rbp,8mov [rbp],raxmov rax,wB0; 8; OPTN +add rax,8; @mov rax,qword[rax]; DUPadd rbp,8mov [rbp],rax; 32; OPTN >>sar rax,32; $ffff; OPTN ANDand rax,65535; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 16; OPTN >>sar rax,16; $ffff; OPTN ANDand rax,65535; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; $ffff; OPTN ANDand rax,65535; 8; OPTN <<shl rax,8; ORor rax,[rbp]sub rbp,8; 8; OPTN <<shl rax,8; ORor rax,[rbp]sub rbp,8; ;ret;--------------------------; :mark  |1082|e     .  | calls:1 niv:0 len:14 (  --  )wC1:;---------OPT;---------ANA;---------GEN; hereadd rbp,8mov [rbp],raxmov rax,qword[wBE]; 0?or rax,raxjnz _oA; (; MEMadd rbp,8mov [rbp],raxmov rax,[FREE_MEM]; DUPadd rbp,8mov [rbp],rax; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; NIPsub rbp,8; )_oA:; memmap>; OPTV !+mov rbx,qword[wC0]mov [rbx],raxadd rbx,8mov rax,rbx; 'memmap>; OPTAV !mov qword[wC0],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :empty  |1092|e  ;  .  | calls:1 niv:0 len:19 (  --  )wC2:;---------OPT;---------ANA;---------GEN; memmap>add rbp,8mov [rbp],raxmov rax,qword[wC0]; 'memmap; OPTAV =?cmp rax,wBFjne _oB; (; DROPmov rax,[rbp]sub rbp,8; MEMadd rbp,8mov [rbp],raxmov rax,[FREE_MEM]; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; ;ret; )_oB:; 8; OPTN -sub rax,8; DUPadd rbp,8mov [rbp],rax; 'memmap>; OPTAV !mov qword[wC0],raxmov rax,[rbp]sub rbp,8; @mov rax,qword[rax]; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :,s  |8082|e     .  | calls:8 niv:0 len:13 ( a --  )wCC:;---------OPT;---------ANA;---------GEN; hereadd rbp,8mov [rbp],raxmov rax,qword[wBE]; SWAPxchg rax,[rbp]; (_iC:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _oC;; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; C!+mov rcx,[rbp]mov byte[rax],cladd rax,1sub rbp,8; SWAPxchg rax,[rbp]; )jmp _iC_oC:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :,w  |1082|e     .  | calls:1 niv:0 len:16 ( a --  )wCD:;---------OPT;---------ANA;---------GEN; hereadd rbp,8mov [rbp],raxmov rax,qword[wBE]; SWAPxchg rax,[rbp]; (_iD:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $ff; OPTN ANDand rax,255; 32; OPTN >?cmp rax,32jle _oD; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; C!+mov rcx,[rbp]mov byte[rax],cladd rax,1sub rbp,8; SWAPxchg rax,[rbp]; )jmp _iD_oD:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :,l  |1092|e  ;  .  | calls:1 niv:0 len:27 ( a --  )wCE:;---------OPT;---------ANA;---------GEN; hereadd rbp,8mov [rbp],raxmov rax,qword[wBE]; SWAPxchg rax,[rbp]; (_iE:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _oE;; 10; OPTN =?cmp rax,10jne _oF; (; 3; OPTN +add rax,3; )_oF:; 13; OPTN =?cmp rax,13jne _o10; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; ;ret; )_o10:; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; C!+mov rcx,[rbp]mov byte[rax],cladd rax,1sub rbp,8; SWAPxchg rax,[rbp]; )jmp _iE_oE:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :c0  |1084|l'    .  | calls:1 niv:0 len:1 (  --  )wD8:;---------OPT;---------ANA;---------GEN; ;ret;--------------------------; :c1  |1084|l'    .  | calls:1 niv:0 len:1 (  --  )wD9:;---------OPT;---------ANA;---------GEN; ;ret;--------------------------; :c2  |1001084|l'    .  | calls:1 niv:1 len:4 ( ab -- c )wDA:;---------OPT;---------ANA;---------GEN; SWAPxchg rax,[rbp]; .bcall w9F; ,sjmp wCC; ;;--------------------------; :c3  |1001094|l' ;  .  | calls:1 niv:1 len:8 ( ab -- c )wDB:;---------OPT;---------ANA;---------GEN; SWAPxchg rax,[rbp]; 0?or rax,raxjnz _o11; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o11:; ,sjmp wCC; ;;--------------------------; :c4  |1001084|l'    .  | calls:1 niv:1 len:4 ( ab -- c )wDC:;---------OPT;---------ANA;---------GEN; SWAPxchg rax,[rbp]; .dcall w9E; ,sjmp wCC; ;;--------------------------; :c5  |1001484|l'    . I| calls:1 niv:1 len:3 (  --  )wDD:;---------OPT;---------ANA;---------GEN; $25add rbp,8mov [rbp],raxmov rax,37; here; OPTV C!+mov rbx,qword[wBE]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :c6  |1001084|l'    .  | calls:1 niv:1 len:4 ( ab -- c )wDE:;---------OPT;---------ANA;---------GEN; SWAPxchg rax,[rbp]; .fcall wA2; ,sjmp wCC; ;;--------------------------; :c7  |1001094|l' ;  .  | calls:1 niv:1 len:8 ( ab -- c )wDF:;---------OPT;---------ANA;---------GEN; SWAPxchg rax,[rbp]; 0?or rax,raxjnz _o12; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o12:; ,wjmp wCD; ;;--------------------------; :c8  |1001084|l'    .  | calls:1 niv:1 len:4 ( ab -- c )wE0:;---------OPT;---------ANA;---------GEN; SWAPxchg rax,[rbp]; .hcall wA0; ,sjmp wCC; ;;--------------------------; :c9  |1001084|l'    .  | calls:1 niv:1 len:6 ( ab -- c )wE1:;---------OPT;---------ANA;---------GEN; SWAPxchg rax,[rbp]; 16; OPTN >>sar rax,16; .dcall w9E; ,sjmp wCC; ;;--------------------------; :ca  |1001084|l'    .  | calls:1 niv:1 len:6 ( ab -- c )wE2:;---------OPT;---------ANA;---------GEN; SWAPxchg rax,[rbp]; $ffff; OPTN ANDand rax,65535; .dcall w9E; ,sjmp wCC; ;;--------------------------; :cb  |1001484|l'    . I| calls:1 niv:1 len:3 ( ab -- c )wE3:;---------OPT;---------ANA;---------GEN; SWAPxchg rax,[rbp]; here; OPTV C!+mov rbx,qword[wBE]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :cc  |1001094|l' ;  .  | calls:1 niv:1 len:8 ( ab -- c )wE4:;---------OPT;---------ANA;---------GEN; SWAPxchg rax,[rbp]; 0?or rax,raxjnz _o13; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o13:; ,ljmp wCE; ;;--------------------------; :cd  |1084|l'    .  | calls:1 niv:0 len:1 (  --  )wE5:;---------OPT;---------ANA;---------GEN; ;ret;--------------------------; :ce  |1001484|l'    . I| calls:1 niv:1 len:3 (  --  )wE6:;---------OPT;---------ANA;---------GEN; 13add rbp,8mov [rbp],raxmov rax,13; here; OPTV C!+mov rbx,qword[wBE]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :cf  |1001084|l'    .  | calls:1 niv:1 len:4 ( ab -- c )wE7:;---------OPT;---------ANA;---------GEN; SWAPxchg rax,[rbp]; .ocall wA1; ,sjmp wCC; ;;--------------------------; :,emit  |6001490|l  ;  . I| calls:1 niv:6 len:17 ( ab -- c )wE9:;---------OPT;---------ANA;---------GEN; $25; OPTN <>?cmp rax,37je _o14; (; here; OPTV C!+mov rbx,qword[wBE]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; ;ret; )_o14:; DROPmov rax,[rbp]sub rbp,8; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $f; OPTN ANDand rax,15; 3; OPTN <<shl rax,3; 'control; OPTAV +add rax,wE8; @mov rax,qword[rax]; EXmov rcx,raxmov rax,[rbp]sub rbp,8jmp rcx; ;;--------------------------; :.[  |2002482|e     . I| calls:2 niv:2 len:18 ( a --  )wFB:;---------OPT;---------ANA;---------GEN; 'esc[add rbp,8mov [rbp],raxmov rax,wF6; 2; OPTN +add rax,2; SWAPxchg rax,[rbp]; (_i15:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o15;; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; C!+mov rcx,[rbp]mov byte[rax],cladd rax,1sub rbp,8; SWAPxchg rax,[rbp]; )jmp _i15_o15:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 'esc[add rbp,8mov [rbp],raxmov rax,wF6; SWAPxchg rax,[rbp]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; stdoutadd rbp,8mov [rbp],raxmov rax,qword[w41]; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; 0add rbp,8mov [rbp],raxxor rax,rax; 0add rbp,8mov [rbp],raxxor rax,rax; sys-WriteFileadd rbp,8mov [rbp],raxmov rax,qword[w4]; SYS5PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$28mov rcx,[rbp]mov [rsp+$20],rcxmov r9,[rbp-1*8]mov r8,[rbp-2*8]mov rdx,[rbp-3*8]mov rcx,[rbp-4*8]call raxadd RSP,$28sub rbp,8*5POP RSP; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :.input  |2001482|e     . I| calls:1 niv:2 len:13 (  --  )w134:;---------OPT;---------ANA;---------GEN; 'padadd rbp,8mov [rbp],raxmov rax,w133; (_i16:; stdinadd rbp,8mov [rbp],raxmov rax,qword[w40]; 'kbadd rbp,8mov [rbp],raxmov rax,wED; 1add rbp,8mov [rbp],raxmov rax,1; 0add rbp,8mov [rbp],raxxor rax,rax; 0add rbp,8mov [rbp],raxxor rax,rax; sys-ReadFileadd rbp,8mov [rbp],raxmov rax,qword[w3]; SYS5PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$28mov rcx,[rbp]mov [rsp+$20],rcxmov r9,[rbp-1*8]mov r8,[rbp-2*8]mov rdx,[rbp-3*8]mov rcx,[rbp-4*8]call raxadd RSP,$28sub rbp,8*5POP RSP; DROPmov rax,[rbp]sub rbp,8; kbadd rbp,8mov [rbp],raxmov rax,qword[wED]; 13; OPTN <>?cmp rax,13je _o16; SWAPxchg rax,[rbp]; C!+mov rcx,[rbp]mov byte[rax],cladd rax,1sub rbp,8; )jmp _i16_o16:; DROPmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; SWAPxchg rax,[rbp]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :.time  |4001480|l     . I| calls:1 niv:4 len:20 (  --  )w137:;---------OPT;---------ANA;---------GEN; timecall wB1; DUPadd rbp,8mov [rbp],rax; 16; OPTN >>sar rax,16; $ff; OPTN ANDand rax,255; "%d:"add rbp,8mov [rbp],raxmov rax,str39; markcall wC1; 'buffadd rbp,8mov [rbp],raxmov rax,wEB; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; (_i17:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o17;; ,emitcall wE9; )jmp _i17_o17:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 0add rbp,8mov [rbp],raxxor rax,rax; here; OPTV C!+mov rbx,qword[wBE]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; emptycall wC2; 'buffadd rbp,8mov [rbp],raxmov rax,wEB; countcall w91; stdoutadd rbp,8mov [rbp],raxmov rax,qword[w41]; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; 0add rbp,8mov [rbp],raxxor rax,rax; 0add rbp,8mov [rbp],raxxor rax,rax; sys-WriteFileadd rbp,8mov [rbp],raxmov rax,qword[w4]; SYS5PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$28mov rcx,[rbp]mov [rsp+$20],rcxmov r9,[rbp-1*8]mov r8,[rbp-2*8]mov rdx,[rbp-3*8]mov rcx,[rbp-4*8]call raxadd RSP,$28sub rbp,8*5POP RSP; DROPmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 8; OPTN >>sar rax,8; $ff; OPTN ANDand rax,255; "%d:"add rbp,8mov [rbp],raxmov rax,str59; markcall wC1; 'buffadd rbp,8mov [rbp],raxmov rax,wEB; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; (_i18:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o18;; ,emitcall wE9; )jmp _i18_o18:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 0add rbp,8mov [rbp],raxxor rax,rax; here; OPTV C!+mov rbx,qword[wBE]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; emptycall wC2; 'buffadd rbp,8mov [rbp],raxmov rax,wEB; countcall w91; stdoutadd rbp,8mov [rbp],raxmov rax,qword[w41]; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; 0add rbp,8mov [rbp],raxxor rax,rax; 0add rbp,8mov [rbp],raxxor rax,rax; sys-WriteFileadd rbp,8mov [rbp],raxmov rax,qword[w4]; SYS5PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$28mov rcx,[rbp]mov [rsp+$20],rcxmov r9,[rbp-1*8]mov r8,[rbp-2*8]mov rdx,[rbp-3*8]mov rcx,[rbp-4*8]call raxadd RSP,$28sub rbp,8*5POP RSP; DROPmov rax,[rbp]sub rbp,8; $ff; OPTN ANDand rax,255; "%d"add rbp,8mov [rbp],raxmov rax,str70; markcall wC1; 'buffadd rbp,8mov [rbp],raxmov rax,wEB; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; (_i19:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o19;; ,emitcall wE9; )jmp _i19_o19:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 0add rbp,8mov [rbp],raxxor rax,rax; here; OPTV C!+mov rbx,qword[wBE]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; emptycall wC2; 'buffadd rbp,8mov [rbp],raxmov rax,wEB; countcall w91; stdoutadd rbp,8mov [rbp],raxmov rax,qword[w41]; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; 0add rbp,8mov [rbp],raxxor rax,rax; 0add rbp,8mov [rbp],raxxor rax,rax; sys-WriteFileadd rbp,8mov [rbp],raxmov rax,qword[w4]; SYS5PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$28mov rcx,[rbp]mov [rsp+$20],rcxmov r9,[rbp-1*8]mov r8,[rbp-2*8]mov rdx,[rbp-3*8]mov rcx,[rbp-4*8]call raxadd RSP,$28sub rbp,8*5POP RSP; DROPmov rax,[rbp]sub rbp,8; 'crbadd rbp,8mov [rbp],raxmov rax,wF5; 2add rbp,8mov [rbp],raxmov rax,2; stdoutadd rbp,8mov [rbp],raxmov rax,qword[w41]; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; 0add rbp,8mov [rbp],raxxor rax,rax; 0add rbp,8mov [rbp],raxxor rax,rax; sys-WriteFileadd rbp,8mov [rbp],raxmov rax,qword[w4]; SYS5PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$28mov rcx,[rbp]mov [rsp+$20],rcxmov r9,[rbp-1*8]mov r8,[rbp-2*8]mov rdx,[rbp-3*8]mov rcx,[rbp-4*8]call raxadd RSP,$28sub rbp,8*5POP RSP; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :  |3001580|l     .iI| calls:1 niv:3 len:7 (  --  )INICIO:;---------OPT;---------ANA;---------GEN; windowscall w43; "H"add rbp,8mov [rbp],raxmov rax,str3D4; .[call wFB; "J"add rbp,8mov [rbp],raxmov rax,str3DB; .[call wFB; "hora"add rbp,8mov [rbp],raxmov rax,str95; markcall wC1; 'buffadd rbp,8mov [rbp],raxmov rax,wEB; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; (_i1A:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o1A;; ,emitcall wE9; )jmp _i1A_o1A:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 0add rbp,8mov [rbp],raxxor rax,rax; here; OPTV C!+mov rbx,qword[wBE]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; emptycall wC2; 'buffadd rbp,8mov [rbp],raxmov rax,wEB; countcall w91; stdoutadd rbp,8mov [rbp],raxmov rax,qword[w41]; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; 0add rbp,8mov [rbp],raxxor rax,rax; 0add rbp,8mov [rbp],raxxor rax,rax; sys-WriteFileadd rbp,8mov [rbp],raxmov rax,qword[w4]; SYS5PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$28mov rcx,[rbp]mov [rsp+$20],rcxmov r9,[rbp-1*8]mov r8,[rbp-2*8]mov rdx,[rbp-3*8]mov rcx,[rbp-4*8]call raxadd RSP,$28sub rbp,8*5POP RSP; DROPmov rax,[rbp]sub rbp,8; 'crbadd rbp,8mov [rbp],raxmov rax,wF5; 2add rbp,8mov [rbp],raxmov rax,2; stdoutadd rbp,8mov [rbp],raxmov rax,qword[w41]; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; 0add rbp,8mov [rbp],raxxor rax,rax; 0add rbp,8mov [rbp],raxxor rax,rax; sys-WriteFileadd rbp,8mov [rbp],raxmov rax,qword[w4]; SYS5PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$28mov rcx,[rbp]mov [rsp+$20],rcxmov r9,[rbp-1*8]mov r8,[rbp-2*8]mov rdx,[rbp-3*8]mov rcx,[rbp-4*8]call raxadd RSP,$28sub rbp,8*5POP RSP; DROPmov rax,[rbp]sub rbp,8; .timecall w137; .inputjmp w134; ; 