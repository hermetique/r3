;---r3 compiler code.asm; r3/test/testsdl.r3;--------------------------; :windows  |1001482|e     . I| calls:1 niv:1 len:196 (  --  )w43:;---------OPT;---------ANA;---------GEN; "KERNEL32.DLL"; OPTS LOADLIBcinvoke64 LoadLibraryA,str29A4; DUPadd rbp,8mov [rbp],rax; "AllocConsole"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str29C1; 'sys-AllocConsole; OPTAV !mov qword[w0],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "ExitProcess"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str29F1; 'sys-ExitProcess; OPTAV !mov qword[w1],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetStdHandle"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2A20; 'sys-GetStdHandle; OPTAV !mov qword[w2],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "ReadFile"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2A52; 'sys-ReadFile; OPTAV !mov qword[w3],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "WriteFile"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2A7A; 'sys-WriteFile; OPTAV !mov qword[w4],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetConsoleMode"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2AA6; 'sys-GetConsoleMode; OPTAV !mov qword[w5],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SetConsoleMode"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2ADA; 'sys-SetConsoleMode; OPTAV !mov qword[w6],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "ReadConsoleInputW"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2B0E; 'sys-ReadConsoleInput; OPTAV !mov qword[w7],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "FlushConsoleInputBuffer"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2B47; 'sys-FlushConsoleInputBuffer; OPTAV !mov qword[w8],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "Sleep"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2B8D; 'sys-Sleep; OPTAV !mov qword[w9],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "WaitForSingleObject"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2BAF; 'sys-WaitForSingleObject; OPTAV !mov qword[wA],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetLastError"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2BEE; 'sys-GetLastError; OPTAV !mov qword[wB],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "CreateFileA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2C1F; 'sys-CreateFile; OPTAV !mov qword[wC],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "CloseHandle"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2C4D; 'sys-CloseHandle; OPTAV !mov qword[wD],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "FlushFileBuffers"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2C7B; 'sys-FlushFileBuffers; OPTAV !mov qword[wE],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "DeleteFileA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2CB3; 'sys-DeleteFile; OPTAV !mov qword[wF],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "MoveFileA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2CE0; 'sys-MoveFile; OPTAV !mov qword[w10],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SetFilePointer"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2D09; 'sys-SetFilePointer; OPTAV !mov qword[w11],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SetEndOfFile"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2D3D; 'sys-SetEndOfFile; OPTAV !mov qword[w12],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetFileSize"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2D6D; 'sys-GetFileSize; OPTAV !mov qword[w13],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetProcessHeap"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2D9C; 'sys-GetProcessHeap; OPTAV !mov qword[w14],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "HeapAlloc"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2DD0; 'sys-HeapAlloc; OPTAV !mov qword[w15],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "HeapFree"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2DFA; 'sys-HeapFree; OPTAV !mov qword[w16],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "HeapReAlloc"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2E22; 'sys-HeapReAlloc; OPTAV !mov qword[w17],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetLocalTime"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2E51; 'sys-GetLocalTime; OPTAV !mov qword[w19],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "FindFirstFileA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2E81; 'sys-FindFirstFile; OPTAV !mov qword[w1A],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "FindNextFileA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2EB4; 'sys-FindNextFile; OPTAV !mov qword[w1B],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "FindClose"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2EE5; 'sys-FindClose; OPTAV !mov qword[w1C],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "CreateProcessA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2F10; 'sys-CreateProcess; OPTAV !mov qword[w1D],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetTickCount"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2F43; 'sys-GetTickCount; OPTAV !mov qword[w18],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetConsoleScreenBufferInfo"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2F73; 'sys-GetConsoleScreenBufferInfo; OPTAV !mov qword[w1E],raxmov rax,[rbp]sub rbp,8; DROPmov rax,[rbp]sub rbp,8; sys-AllocConsoleadd rbp,8mov [rbp],raxmov rax,qword[w0]; SYS0PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20CALL raxadd RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; -10add rbp,8mov [rbp],raxmov rax,-10; sys-GetStdHandleadd rbp,8mov [rbp],raxmov rax,qword[w2]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rcx,[rbp]call raxadd RSP,$20sub rbp,8POP RSP; 'stdin; OPTAV !mov qword[w40],raxmov rax,[rbp]sub rbp,8; -11add rbp,8mov [rbp],raxmov rax,-11; sys-GetStdHandleadd rbp,8mov [rbp],raxmov rax,qword[w2]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rcx,[rbp]call raxadd RSP,$20sub rbp,8POP RSP; 'stdout; OPTAV !mov qword[w41],raxmov rax,[rbp]sub rbp,8; -12add rbp,8mov [rbp],raxmov rax,-12; sys-GetStdHandleadd rbp,8mov [rbp],raxmov rax,qword[w2]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rcx,[rbp]call raxadd RSP,$20sub rbp,8POP RSP; 'stderr; OPTAV !mov qword[w42],raxmov rax,[rbp]sub rbp,8; stdinadd rbp,8mov [rbp],raxmov rax,qword[w40]; 'console-modeadd rbp,8mov [rbp],raxmov rax,w3E; sys-GetConsoleModeadd rbp,8mov [rbp],raxmov rax,qword[w5]; SYS2PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rdx,[rbp]mov rcx,[rbp-1*8]call raxadd RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; stdinadd rbp,8mov [rbp],raxmov rax,qword[w40]; console-modeadd rbp,8mov [rbp],raxmov rax,qword[w3E]; $FFFFFFFFFFFFFFE6 ; calc; OPTC ANDand rax,-26; sys-SetConsoleModeadd rbp,8mov [rbp],raxmov rax,qword[w6]; SYS2PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rdx,[rbp]mov rcx,[rbp-1*8]call raxadd RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; stdoutadd rbp,8mov [rbp],raxmov rax,qword[w41]; 'console-modeadd rbp,8mov [rbp],raxmov rax,w3E; sys-GetConsoleModeadd rbp,8mov [rbp],raxmov rax,qword[w5]; SYS2PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rdx,[rbp]mov rcx,[rbp-1*8]call raxadd RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; stdoutadd rbp,8mov [rbp],raxmov rax,qword[w41]; console-modeadd rbp,8mov [rbp],raxmov rax,qword[w3E]; $4; OPTN ORor rax,4; sys-SetConsoleModeadd rbp,8mov [rbp],raxmov rax,qword[w6]; SYS2PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rdx,[rbp]mov rcx,[rbp-1*8]call raxadd RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; sys-GetProcessHeapadd rbp,8mov [rbp],raxmov rax,qword[w14]; SYS0PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20CALL raxadd RSP,$20POP RSP; 'process-heap; OPTAV !mov qword[w3F],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :sdl2  |1082|e     .  | calls:1 niv:0 len:199 (  --  )w110:;---------OPT;---------ANA;---------GEN; "SDL2.DLL"; OPTS LOADLIBcinvoke64 LoadLibraryA,str10FC; DUPadd rbp,8mov [rbp],rax; "SDL_Init"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1114; 'sys-SDL_Init; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_Quit"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str113C; 'sys-SDL_Quit; OPTAV !mov qword[wBF],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_GetNumVideoDisplays"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1164; 'sys-SDL_GetNumVideoDisplays; OPTAV !mov qword[wC0],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_CreateWindow"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str11AA; 'sys-SDL_CreateWindow; OPTAV !mov qword[wC1],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_GetWindowSurface"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str11E2; 'sys-SDL_GetWindowSurface; OPTAV !mov qword[wC2],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_ShowCursor"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1222; 'sys-SDL_ShowCursor; OPTAV !mov qword[wC3],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_UpdateWindowSurface"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1256; 'sys-SDL_UpdateWindowSurface; OPTAV !mov qword[wC4],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_DestroyWindow"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str129C; 'sys-SDL_DestroyWindow; OPTAV !mov qword[wC5],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_CreateRenderer"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str12D6; 'sys-SDL_CreateRenderer; OPTAV !mov qword[wC6],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_CreateTexture"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1312; 'sys-SDL_CreateTexture; OPTAV !mov qword[wC7],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_DestroyTexture"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str134C; 'sys-SDL_DestroyTexture; OPTAV !mov qword[wC8],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_DestroyRenderer"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1388; 'sys-SDL_DestroyRenderer; OPTAV !mov qword[wC9],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_UpdateTexture"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str13C6; 'sys-SDL_UpdateTexture; OPTAV !mov qword[wCA],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderClear"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1400; 'sys-SDL_RenderClear; OPTAV !mov qword[wCB],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderCopy"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1436; 'sys-SDL_RenderCopy; OPTAV !mov qword[wCC],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderCopyEx"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str146A; 'sys-SDL_RenderCopyEx; OPTAV !mov qword[wCD],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderPresent"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str14A2; 'sys-SDL_RenderPresent; OPTAV !mov qword[wCE],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_CreateTextureFromSurface"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str14DC; 'sys-SDL_CreateTextureFromSurface; OPTAV !mov qword[wD0],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_QueryTexture"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str152C; 'sys-SDL_QueryTexture; OPTAV !mov qword[wD1],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_SetTextureColorMod"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1564; 'sys-SDL_SetTextureColorMod; OPTAV !mov qword[wE6],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_SetRenderDrawColor"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str15A8; 'sys-SDL_SetRenderDrawColor; OPTAV !mov qword[wCF],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_FreeSurface"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str15EC; 'sys-SDL_FreeSurface; OPTAV !mov qword[wD2],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_LockTexture"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1622; 'sys-SDL_LockTexture; OPTAV !mov qword[wD3],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_UnlockTexture"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1658; 'sys-SDL_UnlockTexture; OPTAV !mov qword[wD4],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderSetLogicalSize"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1692; 'sys-SDL_RenderSetLogicalSize; OPTAV !mov qword[wD5],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_SetRenderDrawBlendMode"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str16DA; 'sys-SDL_SetRenderDrawBlendMode; OPTAV !mov qword[wD6],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderDrawPoint"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1726; 'sys-SDL_RenderDrawPoint; OPTAV !mov qword[wD7],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderDrawLine"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1764; 'sys-SDL_RenderDrawLine; OPTAV !mov qword[wD8],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderDrawRect"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str17A0; 'sys-SDL_RenderDrawRect; OPTAV !mov qword[wD9],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderFillRect"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str17DC; 'sys-SDL_RenderFillRect; OPTAV !mov qword[wDA],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_Delay"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1819; 'sys-SDL_Delay; OPTAV !mov qword[wDB],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_PollEvent"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1843; 'sys-SDL_PollEvent; OPTAV !mov qword[wDC],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_GetTicks"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str1875; 'sys-SDL_GetTicks; OPTAV !mov qword[wDD],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RWFromFile"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str18A7; 'sys-SDL_RWFromFile; OPTAV !mov qword[wE0],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_GL_SetAttribute"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str18DD; 'sys-SDL_GL_SetAttribute; OPTAV !mov qword[wE1],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_GL_CreateContext"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str191B; 'sys-SDL_GL_CreateContext; OPTAV !mov qword[wE2],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_GL_DeleteContext"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str195B; 'sys-SDL_GL_DeleteContext; OPTAV !mov qword[wE3],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_GL_SetSwapInterval"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str199B; 'sys-SDL_GL_SetSwapInterval; OPTAV !mov qword[wE4],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_GL_SwapWindow"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str19DF; 'sys-SDL_GL_SwapWindow; OPTAV !mov qword[wE5],raxmov rax,[rbp]sub rbp,8; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :SDLinit  |1001482|e     . I| calls:1 niv:1 len:40 ( abc --  )w119:;---------OPT;---------ANA;---------GEN; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; *imul rax,[rbp]sub rbp,8; 'sizebuffer; OPTAV !mov qword[w117],raxmov rax,[rbp]sub rbp,8; 'sh; OPTAV !mov qword[w115],raxmov rax,[rbp]sub rbp,8; 'sw; OPTAV !mov qword[w114],raxmov rax,[rbp]sub rbp,8; $3231add rbp,8mov [rbp],raxmov rax,12849; sys-SDL_Initadd rbp,8mov [rbp],raxmov rax,qword[wBE]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rcx,[rbp]call raxadd RSP,$20sub rbp,8POP RSP; DROPmov rax,[rbp]sub rbp,8; $1FFF0000add rbp,8mov [rbp],raxmov rax,536805376; $1FFF0000add rbp,8mov [rbp],raxmov rax,536805376; swadd rbp,8mov [rbp],raxmov rax,qword[w114]; shadd rbp,8mov [rbp],raxmov rax,qword[w115]; 0add rbp,8mov [rbp],raxxor rax,rax; sys-SDL_CreateWindowadd rbp,8mov [rbp],raxmov rax,qword[wC1]; SYS6PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$30mov rdx,[rbp]mov [rsp+$28],rdxmov rcx,[rbp-1*8]mov [rsp+$20],rcxmov r9,[rbp-2*8]mov r8,[rbp-3*8]mov rdx,[rbp-4*8]mov rcx,[rbp-5*8]call raxadd RSP,$30sub rbp,8*6POP RSP; DUPadd rbp,8mov [rbp],rax; 'SDL_windows; OPTAV !mov qword[w111],raxmov rax,[rbp]sub rbp,8; sys-SDL_GetWindowSurfaceadd rbp,8mov [rbp],raxmov rax,qword[wC2]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rcx,[rbp]call raxadd RSP,$20sub rbp,8POP RSP; DUPadd rbp,8mov [rbp],rax; 'SDL_screen; OPTAV !mov qword[w112],raxmov rax,[rbp]sub rbp,8; 24; OPTN +add rax,24; D@+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; 'pitch; OPTAV !mov qword[w116],raxmov rax,[rbp]sub rbp,8; 4; OPTN +add rax,4; @mov rax,qword[rax]; 'vframe; OPTAV !mov qword[w118],raxmov rax,[rbp]sub rbp,8; SDL_windowsadd rbp,8mov [rbp],raxmov rax,qword[w111]; -1add rbp,8mov [rbp],raxmov rax,-1; 0add rbp,8mov [rbp],raxxor rax,rax; sys-SDL_CreateRendereradd rbp,8mov [rbp],raxmov rax,qword[wC6]; SYS3PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov r8,[rbp]mov rdx,[rbp-1*8]mov rcx,[rbp-2*8]call raxadd RSP,$20sub rbp,8*3POP RSP; 'SDLrenderer; OPTAV !mov qword[w113],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :SDLupdate  |1001482|e     . I| calls:1 niv:1 len:103 (  --  )w123:;---------OPT;---------ANA;---------GEN; 0add rbp,8mov [rbp],raxxor rax,rax; 'SDLkey; OPTAV !mov qword[w11E],raxmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; 'SDLkeychar; OPTAV !mov qword[w11F],raxmov rax,[rbp]sub rbp,8; 10add rbp,8mov [rbp],raxmov rax,10; sys-SDL_Delayadd rbp,8mov [rbp],raxmov rax,qword[wDB]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rcx,[rbp]call raxadd RSP,$20sub rbp,8POP RSP; DROPmov rax,[rbp]sub rbp,8; (_i0:; 'SDLeventadd rbp,8mov [rbp],raxmov rax,w11D; sys-SDL_PollEventadd rbp,8mov [rbp],raxmov rax,qword[wDC]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rcx,[rbp]call raxadd RSP,$20sub rbp,8POP RSP; 1?or rax,raxjz _o0;; DROPmov rax,[rbp]sub rbp,8; 'SDLevent; OPTAV D@add rbp,8mov [rbp],raxmovsxd rax,dword [w11D]; $300; OPTN =?cmp rax,768jne _o1; (; 'SDLeventadd rbp,8mov [rbp],raxmov rax,w11D; 20; OPTN +add rax,20; D@movsxd rax,dword [rax]; DUPadd rbp,8mov [rbp],rax; $ffff; OPTN ANDand rax,65535; SWAPxchg rax,[rbp]; 16; OPTN >>sar rax,16; ORor rax,[rbp]sub rbp,8; 'SDLkey; OPTAV !mov qword[w11E],raxmov rax,[rbp]sub rbp,8; )_o1:; $301; OPTN =?cmp rax,769jne _o2; (; 'SDLeventadd rbp,8mov [rbp],raxmov rax,w11D; 20; OPTN +add rax,20; D@movsxd rax,dword [rax]; DUPadd rbp,8mov [rbp],rax; $ffff; OPTN ANDand rax,65535; SWAPxchg rax,[rbp]; 16; OPTN >>sar rax,16; ORor rax,[rbp]sub rbp,8; $1000; OPTN ORor rax,4096; 'SDLkey; OPTAV !mov qword[w11E],raxmov rax,[rbp]sub rbp,8; )_o2:; $303; OPTN =?cmp rax,771jne _o3; (; 'SDLeventadd rbp,8mov [rbp],raxmov rax,w11D; 12; OPTN +add rax,12; C@movsx rax,byte [rax]; 'SDLkeychar; OPTAV !mov qword[w11F],raxmov rax,[rbp]sub rbp,8; )_o3:; $400; OPTN =?cmp rax,1024jne _o4; (; 'SDLeventadd rbp,8mov [rbp],raxmov rax,w11D; 20; OPTN +add rax,20; D@+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; 'SDLx; OPTAV !mov qword[w120],raxmov rax,[rbp]sub rbp,8; D@movsxd rax,dword [rax]; 'SDLy; OPTAV !mov qword[w121],raxmov rax,[rbp]sub rbp,8; )_o4:; $401; OPTN =?cmp rax,1025jne _o5; (; 'SDLeventadd rbp,8mov [rbp],raxmov rax,w11D; 16; OPTN +add rax,16; C@movsx rax,byte [rax]; SDLb; OPTV ORmov rbx,qword[w122]or rax,rbx; 'SDLb; OPTAV !mov qword[w122],raxmov rax,[rbp]sub rbp,8; )_o5:; $402; OPTN =?cmp rax,1026jne _o6; (; 'SDLeventadd rbp,8mov [rbp],raxmov rax,w11D; 16; OPTN +add rax,16; C@movsx rax,byte [rax]; NOTnot rax; SDLb; OPTV ANDmov rbx,qword[w122]and rax,rbx; 'SDLb; OPTAV !mov qword[w122],raxmov rax,[rbp]sub rbp,8; )_o6:; DROPmov rax,[rbp]sub rbp,8; )jmp _i0_o0:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :SDLshow  |1001082|e     .  | calls:1 niv:1 len:16 ( a --  )w125:;---------OPT;---------ANA;---------GEN; 0add rbp,8mov [rbp],raxxor rax,rax; '.exit; OPTAV !mov qword[w124],raxmov rax,[rbp]sub rbp,8; (_i7:; .exitadd rbp,8mov [rbp],raxmov rax,qword[w124]; 0?or rax,raxjnz _o7; DROPmov rax,[rbp]sub rbp,8; SDLupdatecall w123; DUPadd rbp,8mov [rbp],rax; EXmov rcx,raxmov rax,[rbp]sub rbp,8call rcx; )jmp _i7_o7:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 0add rbp,8mov [rbp],raxxor rax,rax; '.exit; OPTAV !mov qword[w124],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :sdl2image  |1082|e     .  | calls:1 niv:0 len:14 (  --  )w12B:;---------OPT;---------ANA;---------GEN; "SDL2_image.DLL"; OPTS LOADLIBcinvoke64 LoadLibraryA,str60B1; DUPadd rbp,8mov [rbp],rax; "IMG_Load"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str60CF; 'sys-IMG_Load; OPTAV !mov qword[w128],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "IMG_Init"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str60F7; 'sys-IMG_Init; OPTAV !mov qword[w127],raxmov rax,[rbp]sub rbp,8; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :sdl2mixer  |1082|e     .  | calls:1 niv:0 len:69 (  --  )w146:;---------OPT;---------ANA;---------GEN; "SDL2_mixer.DLL"; OPTS LOADLIBcinvoke64 LoadLibraryA,str64BD; DUPadd rbp,8mov [rbp],rax; "Mix_Init"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str64DB; 'sys-Mix_Init; OPTAV !mov qword[w12C],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "Mix_Quit"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str6503; 'sys-Mix_Quit; OPTAV !mov qword[w12D],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "Mix_LoadWAV_RW"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str652B; 'sys-Mix_LoadWAV_RW; OPTAV !mov qword[w12E],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "Mix_LoadMUS"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str655F; 'sys-Mix_LoadMUS; OPTAV !mov qword[w12F],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "Mix_PlayChannelTimed"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str658D; 'sys-Mix_PlayChannelTimed; OPTAV !mov qword[w130],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "Mix_HaltChannel"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str65CD; 'sys-Mix_HaltChannel; OPTAV !mov qword[w131],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "Mix_PlayMusic"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str6603; 'sys-Mix_PlayMusic; OPTAV !mov qword[w132],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "Mix_HaltMusic"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str6635; 'sys-Mix_HaltMusic; OPTAV !mov qword[w133],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "Mix_FreeChunk"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str6667; 'sys-Mix_FreeChunk; OPTAV !mov qword[w134],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "Mix_FreeMusic"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str6699; 'sys-Mix_FreeMusic; OPTAV !mov qword[w135],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "Mix_OpenAudio"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str66CB; 'sys-Mix_OpenAudio; OPTAV !mov qword[w136],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "Mix_CloseAudio"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str66FD; 'sys-Mix_CloseAudio; OPTAV !mov qword[w137],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "Mix_PlayingMusic"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str6731; 'sys-Mix_PlayingMusic; OPTAV !mov qword[w138],raxmov rax,[rbp]sub rbp,8; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :mark  |1082|e     .  | calls:1 niv:0 len:14 (  --  )w1C5:;---------OPT;---------ANA;---------GEN; hereadd rbp,8mov [rbp],raxmov rax,qword[w1C2]; 0?or rax,raxjnz _o8; (; MEMadd rbp,8mov [rbp],raxmov rax,[FREE_MEM]; DUPadd rbp,8mov [rbp],rax; 'here; OPTAV !mov qword[w1C2],raxmov rax,[rbp]sub rbp,8; NIPsub rbp,8; )_o8:; memmap>; OPTV !+mov rbx,qword[w1C4]mov [rbx],raxadd rbx,8mov rax,rbx; 'memmap>; OPTAV !mov qword[w1C4],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :drawl  |1001484|l'    . I| calls:1 niv:1 len:48 (  --  )w224:;---------OPT; INLINE CTE; INLINE CTE; INLINE CTE; INLINE CTE;---------ANA;---------GEN; SDLrendereradd rbp,8mov [rbp],raxmov rax,qword[w113]; sys-SDL_RenderClearadd rbp,8mov [rbp],raxmov rax,qword[wCB]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rcx,[rbp]call raxadd RSP,$20sub rbp,8POP RSP; DROPmov rax,[rbp]sub rbp,8; SDLrendereradd rbp,8mov [rbp],raxmov rax,qword[w113]; textureadd rbp,8mov [rbp],raxmov rax,qword[w21E]; 0add rbp,8mov [rbp],raxxor rax,rax; 'desrecadd rbp,8mov [rbp],raxmov rax,w221; sys-SDL_RenderCopyadd rbp,8mov [rbp],raxmov rax,qword[wCC]; SYS4PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov r9,[rbp]mov r8,[rbp-1*8]mov rdx,[rbp-2*8]mov rcx,[rbp-3*8]call raxadd RSP,$20sub rbp,8*4POP RSP; DROPmov rax,[rbp]sub rbp,8; SDLrendereradd rbp,8mov [rbp],raxmov rax,qword[w113]; textureadd rbp,8mov [rbp],raxmov rax,qword[w21E]; 0add rbp,8mov [rbp],raxxor rax,rax; 'desrec2add rbp,8mov [rbp],raxmov rax,w222; sys-SDL_RenderCopyadd rbp,8mov [rbp],raxmov rax,qword[wCC]; SYS4PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov r9,[rbp]mov r8,[rbp-1*8]mov rdx,[rbp-2*8]mov rcx,[rbp-3*8]call raxadd RSP,$20sub rbp,8*4POP RSP; DROPmov rax,[rbp]sub rbp,8; SDLrendereradd rbp,8mov [rbp],raxmov rax,qword[w113]; sys-SDL_RenderPresentadd rbp,8mov [rbp],raxmov rax,qword[wCE]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rcx,[rbp]call raxadd RSP,$20sub rbp,8POP RSP; DROPmov rax,[rbp]sub rbp,8; vxadd rbp,8mov [rbp],raxmov rax,qword[w223]; 'desrec; OPTAV D+!add dword[w221],eaxmov rax,[rbp]sub rbp,8; SDLkeyadd rbp,8mov [rbp],raxmov rax,qword[w11E]; $101b; OPTN =?cmp rax,4123jne _o9; (; 1add rbp,8mov [rbp],raxmov rax,1; '.exit; OPTAV !mov qword[w124],raxmov rax,[rbp]sub rbp,8; )_o9:; $4050; OPTN =?cmp rax,16464jne _oA; (; 1add rbp,8mov [rbp],raxmov rax,1; 'vx; OPTAV !mov qword[w223],raxmov rax,[rbp]sub rbp,8; )_oA:; $404f; OPTN =?cmp rax,16463jne _oB; (; -1add rbp,8mov [rbp],raxmov rax,-1; 'vx; OPTAV !mov qword[w223],raxmov rax,[rbp]sub rbp,8; )_oB:; $403a; OPTN =?cmp rax,16442jne _oC; (; -1add rbp,8mov [rbp],raxmov rax,-1; snd_shootadd rbp,8mov [rbp],raxmov rax,qword[w21F]; 0add rbp,8mov [rbp],raxxor rax,rax; -1add rbp,8mov [rbp],raxmov rax,-1; sys-Mix_PlayChannelTimedadd rbp,8mov [rbp],raxmov rax,qword[w130]; SYS4PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov r9,[rbp]mov r8,[rbp-1*8]mov rdx,[rbp-2*8]mov rcx,[rbp-3*8]call raxadd RSP,$20sub rbp,8*4POP RSP; DROPmov rax,[rbp]sub rbp,8; )_oC:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :main  |1001480|l     . I| calls:1 niv:1 len:36 (  --  )w228:;---------OPT;---------ANA;---------GEN; 44100add rbp,8mov [rbp],raxmov rax,44100; $08010add rbp,8mov [rbp],raxmov rax,32784; 2add rbp,8mov [rbp],raxmov rax,2; 4096add rbp,8mov [rbp],raxmov rax,4096; sys-Mix_OpenAudioadd rbp,8mov [rbp],raxmov rax,qword[w136]; SYS4PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov r9,[rbp]mov r8,[rbp-1*8]mov rdx,[rbp-2*8]mov rcx,[rbp-3*8]call raxadd RSP,$20sub rbp,8*4POP RSP; DROPmov rax,[rbp]sub rbp,8; "media/snd/shoot.mp3"add rbp,8mov [rbp],raxmov rax,str2DD; "rb"add rbp,8mov [rbp],raxmov rax,str62A8; sys-SDL_RWFromFileadd rbp,8mov [rbp],raxmov rax,qword[wE0]; SYS2PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rdx,[rbp]mov rcx,[rbp-1*8]call raxadd RSP,$20POP RSP; sys-Mix_LoadWAV_RWadd rbp,8mov [rbp],raxmov rax,qword[w12E]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rcx,[rbp]call raxadd RSP,$20sub rbp,8POP RSP; 'snd_shoot; OPTAV !mov qword[w21F],raxmov rax,[rbp]sub rbp,8; "r3sdl"add rbp,8mov [rbp],raxmov rax,str312; 640add rbp,8mov [rbp],raxmov rax,640; 480add rbp,8mov [rbp],raxmov rax,480; SDLinitcall w119; SDLrendereradd rbp,8mov [rbp],raxmov rax,qword[w113]; $ffadd rbp,8mov [rbp],raxmov rax,255; $ffadd rbp,8mov [rbp],raxmov rax,255; $ffadd rbp,8mov [rbp],raxmov rax,255; $ffadd rbp,8mov [rbp],raxmov rax,255; sys-SDL_SetRenderDrawColoradd rbp,8mov [rbp],raxmov rax,qword[wCF]; SYS5PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$28mov rcx,[rbp]mov [rsp+$20],rcxmov r9,[rbp-1*8]mov r8,[rbp-2*8]mov rdx,[rbp-3*8]mov rcx,[rbp-4*8]call raxadd RSP,$28sub rbp,8*5POP RSP; DROPmov rax,[rbp]sub rbp,8; $3add rbp,8mov [rbp],raxmov rax,3; sys-IMG_Initadd rbp,8mov [rbp],raxmov rax,qword[w127]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rcx,[rbp]call raxadd RSP,$20sub rbp,8POP RSP; DROPmov rax,[rbp]sub rbp,8; "media/img/lolomario.png"add rbp,8mov [rbp],raxmov rax,str371; sys-IMG_Loadadd rbp,8mov [rbp],raxmov rax,qword[w128]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rcx,[rbp]call raxadd RSP,$20sub rbp,8POP RSP; 'surface; OPTAV !mov qword[w226],raxmov rax,[rbp]sub rbp,8; SDLrendereradd rbp,8mov [rbp],raxmov rax,qword[w113]; surfaceadd rbp,8mov [rbp],raxmov rax,qword[w226]; sys-SDL_CreateTextureFromSurfaceadd rbp,8mov [rbp],raxmov rax,qword[wD0]; SYS2PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rdx,[rbp]mov rcx,[rbp-1*8]call raxadd RSP,$20POP RSP; 'texture; OPTAV !mov qword[w21E],raxmov rax,[rbp]sub rbp,8; surfaceadd rbp,8mov [rbp],raxmov rax,qword[w226]; sys-SDL_FreeSurfaceadd rbp,8mov [rbp],raxmov rax,qword[wD2]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rcx,[rbp]call raxadd RSP,$20sub rbp,8POP RSP; DROPmov rax,[rbp]sub rbp,8; 'drawladd rbp,8mov [rbp],raxmov rax,w224; SDLshowcall w125; SDL_windowsadd rbp,8mov [rbp],raxmov rax,qword[w111]; sys-SDL_DestroyWindowadd rbp,8mov [rbp],raxmov rax,qword[wC5]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rcx,[rbp]call raxadd RSP,$20sub rbp,8POP RSP; DROPmov rax,[rbp]sub rbp,8; sys-SDL_Quitadd rbp,8mov [rbp],raxmov rax,qword[wBF]; SYS0PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20CALL raxadd RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; sys-Mix_CloseAudioadd rbp,8mov [rbp],raxmov rax,qword[w137]; SYS0PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20CALL raxadd RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :  |2001580|l     .iI| calls:1 niv:2 len:3 (  --  )INICIO:;---------OPT;---------ANA;---------GEN; windowscall w43; sdl2call w110; sdl2imagecall w12B; sdl2mixercall w146; markcall w1C5; mainjmp w228; ; 