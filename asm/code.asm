;---r3 compiler code.asm; r3/demo/ajuste.r3;--------------------------; :windows  |1001482|e     . I| calls:1 niv:1 len:196 (  --  )w43:;---------OPT;---------ANA;---------GEN; "KERNEL32.DLL"; OPTS LOADLIBcinvoke64 LoadLibraryA,str224D; DUPadd rbp,8mov [rbp],rax; "AllocConsole"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str226A; 'sys-AllocConsole; OPTAV !mov qword[w0],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "ExitProcess"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str229A; 'sys-ExitProcess; OPTAV !mov qword[w1],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetStdHandle"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str22C9; 'sys-GetStdHandle; OPTAV !mov qword[w2],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "ReadFile"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str22FB; 'sys-ReadFile; OPTAV !mov qword[w3],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "WriteFile"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2323; 'sys-WriteFile; OPTAV !mov qword[w4],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetConsoleMode"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str234F; 'sys-GetConsoleMode; OPTAV !mov qword[w5],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SetConsoleMode"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2383; 'sys-SetConsoleMode; OPTAV !mov qword[w6],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "ReadConsoleInputW"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str23B7; 'sys-ReadConsoleInput; OPTAV !mov qword[w7],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "FlushConsoleInputBuffer"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str23F0; 'sys-FlushConsoleInputBuffer; OPTAV !mov qword[w8],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "Sleep"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2436; 'sys-Sleep; OPTAV !mov qword[w9],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "WaitForSingleObject"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2458; 'sys-WaitForSingleObject; OPTAV !mov qword[wA],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetLastError"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2497; 'sys-GetLastError; OPTAV !mov qword[wB],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "CreateFileA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str24C8; 'sys-CreateFile; OPTAV !mov qword[wC],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "CloseHandle"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str24F6; 'sys-CloseHandle; OPTAV !mov qword[wD],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "FlushFileBuffers"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2524; 'sys-FlushFileBuffers; OPTAV !mov qword[wE],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "DeleteFileA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str255C; 'sys-DeleteFile; OPTAV !mov qword[wF],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "MoveFileA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2589; 'sys-MoveFile; OPTAV !mov qword[w10],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SetFilePointer"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str25B2; 'sys-SetFilePointer; OPTAV !mov qword[w11],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SetEndOfFile"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str25E6; 'sys-SetEndOfFile; OPTAV !mov qword[w12],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetFileSize"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2616; 'sys-GetFileSize; OPTAV !mov qword[w13],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetProcessHeap"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2645; 'sys-GetProcessHeap; OPTAV !mov qword[w14],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "HeapAlloc"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str2679; 'sys-HeapAlloc; OPTAV !mov qword[w15],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "HeapFree"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str26A3; 'sys-HeapFree; OPTAV !mov qword[w16],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "HeapReAlloc"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str26CB; 'sys-HeapReAlloc; OPTAV !mov qword[w17],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetLocalTime"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str26FA; 'sys-GetLocalTime; OPTAV !mov qword[w19],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "FindFirstFileA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str272A; 'sys-FindFirstFile; OPTAV !mov qword[w1A],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "FindNextFileA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str275D; 'sys-FindNextFile; OPTAV !mov qword[w1B],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "FindClose"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str278E; 'sys-FindClose; OPTAV !mov qword[w1C],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "CreateProcessA"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str27B9; 'sys-CreateProcess; OPTAV !mov qword[w1D],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetTickCount"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str27EC; 'sys-GetTickCount; OPTAV !mov qword[w18],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetConsoleScreenBufferInfo"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str281C; 'sys-GetConsoleScreenBufferInfo; OPTAV !mov qword[w1E],raxmov rax,[rbp]sub rbp,8; DROPmov rax,[rbp]sub rbp,8; sys-AllocConsoleadd rbp,8mov [rbp],raxmov rax,qword[w0]; SYS0PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20CALL raxadd RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; -10add rbp,8mov [rbp],raxmov rax,-10; sys-GetStdHandleadd rbp,8mov [rbp],raxmov rax,qword[w2]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rcx,[rbp]call raxadd RSP,$20sub rbp,8POP RSP; 'stdin; OPTAV !mov qword[w40],raxmov rax,[rbp]sub rbp,8; -11add rbp,8mov [rbp],raxmov rax,-11; sys-GetStdHandleadd rbp,8mov [rbp],raxmov rax,qword[w2]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rcx,[rbp]call raxadd RSP,$20sub rbp,8POP RSP; 'stdout; OPTAV !mov qword[w41],raxmov rax,[rbp]sub rbp,8; -12add rbp,8mov [rbp],raxmov rax,-12; sys-GetStdHandleadd rbp,8mov [rbp],raxmov rax,qword[w2]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rcx,[rbp]call raxadd RSP,$20sub rbp,8POP RSP; 'stderr; OPTAV !mov qword[w42],raxmov rax,[rbp]sub rbp,8; stdinadd rbp,8mov [rbp],raxmov rax,qword[w40]; 'console-modeadd rbp,8mov [rbp],raxmov rax,w3E; sys-GetConsoleModeadd rbp,8mov [rbp],raxmov rax,qword[w5]; SYS2PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rdx,[rbp]mov rcx,[rbp-1*8]call raxadd RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; stdinadd rbp,8mov [rbp],raxmov rax,qword[w40]; console-modeadd rbp,8mov [rbp],raxmov rax,qword[w3E]; $FFFFFFFFFFFFFFE6 ; calc; OPTC ANDand rax,-26; sys-SetConsoleModeadd rbp,8mov [rbp],raxmov rax,qword[w6]; SYS2PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rdx,[rbp]mov rcx,[rbp-1*8]call raxadd RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; stdoutadd rbp,8mov [rbp],raxmov rax,qword[w41]; 'console-modeadd rbp,8mov [rbp],raxmov rax,w3E; sys-GetConsoleModeadd rbp,8mov [rbp],raxmov rax,qword[w5]; SYS2PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rdx,[rbp]mov rcx,[rbp-1*8]call raxadd RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; stdoutadd rbp,8mov [rbp],raxmov rax,qword[w41]; console-modeadd rbp,8mov [rbp],raxmov rax,qword[w3E]; $4; OPTN ORor rax,4; sys-SetConsoleModeadd rbp,8mov [rbp],raxmov rax,qword[w6]; SYS2PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rdx,[rbp]mov rcx,[rbp-1*8]call raxadd RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; sys-GetProcessHeapadd rbp,8mov [rbp],raxmov rax,qword[w14]; SYS0PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20CALL raxadd RSP,$20POP RSP; 'process-heap; OPTAV !mov qword[w3F],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :10/mod  |1082|e     .  | calls:1 niv:0 len:49 ( a -- bc )w7E:;---------OPT;---------ANA;---------GEN; DUPadd rbp,8mov [rbp],rax; 1; OPTN >>sar rax,1; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 2; OPTN >>sar rax,2; +add rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 4; OPTN >>sar rax,4; +add rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 8; OPTN >>sar rax,8; +add rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 16; OPTN >>sar rax,16; +add rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 32; OPTN >>sar rax,32; +add rax,[rbp]sub rbp,8; 3; OPTN >>sar rax,3; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; DUPadd rbp,8mov [rbp],rax; 2; OPTN <<shl rax,2; +add rax,[rbp]sub rbp,8; 1; OPTN <<shl rax,1; -neg raxadd rax,[rbp]sub rbp,8; 6; OPTN +add rax,6; 4; OPTN >>sar rax,4; +add rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; DUPadd rbp,8mov [rbp],rax; 2; OPTN <<shl rax,2; +add rax,[rbp]sub rbp,8; 1; OPTN <<shl rax,1; -neg raxadd rax,[rbp]sub rbp,8; ;ret;--------------------------; :sign  |1090|l  ;  .  | calls:1 niv:0 len:12 ( ab -- c )w9D:;---------OPT;---------ANA;---------GEN; -?or rax,raxjns _o0; (; DROPmov rax,[rbp]sub rbp,8; $2dadd rbp,8mov [rbp],raxmov rax,45; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; ;ret; )_o0:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; ;ret;--------------------------; :.d  |1001492|e  ;  . I| calls:1 niv:1 len:26 ( a -- b )w9E:;---------OPT;---------ANA;---------GEN; DUPadd rbp,8mov [rbp],rax; ABScqoadd rax,rdxxor rax,rdx; -?or rax,raxjns _o1; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; "-9223372036854775808"add rbp,8mov [rbp],raxmov rax,str333A; ;ret; )_o1:; 'mbuffadd rbp,8mov [rbp],raxmov rax,w9B; 64; OPTN +add rax,64; 0add rbp,8mov [rbp],raxxor rax,rax; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; (_i2:; 10/modcall w7E; $30; OPTN +add rax,48; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; 1?or rax,raxjz _o2;; )jmp _i2_o2:; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; signjmp w9D; ;;--------------------------; :time  |1001482|e     . I| calls:1 niv:1 len:26 (  -- a )wB1:;---------OPT;---------ANA;---------GEN; 'sistimeadd rbp,8mov [rbp],raxmov rax,wB0; sys-GetLocalTimeadd rbp,8mov [rbp],raxmov rax,qword[w19]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rcx,[rbp]call raxadd RSP,$20sub rbp,8POP RSP; DROPmov rax,[rbp]sub rbp,8; 'sistimeadd rbp,8mov [rbp],raxmov rax,wB0; 8; OPTN +add rax,8; @mov rax,qword[rax]; DUPadd rbp,8mov [rbp],rax; 32; OPTN >>sar rax,32; $ffff; OPTN ANDand rax,65535; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 16; OPTN >>sar rax,16; $ffff; OPTN ANDand rax,65535; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; $ffff; OPTN ANDand rax,65535; 8; OPTN <<shl rax,8; ORor rax,[rbp]sub rbp,8; 8; OPTN <<shl rax,8; ORor rax,[rbp]sub rbp,8; ;ret;--------------------------; :date  |1001482|e     . I| calls:1 niv:1 len:24 (  -- a )wB2:;---------OPT;---------ANA;---------GEN; 'sistimeadd rbp,8mov [rbp],raxmov rax,wB0; sys-GetLocalTimeadd rbp,8mov [rbp],raxmov rax,qword[w19]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rcx,[rbp]call raxadd RSP,$20sub rbp,8POP RSP; DROPmov rax,[rbp]sub rbp,8; 'sistime; OPTAV @add rbp,8mov [rbp],raxmov rax,qword[wB0]; DUPadd rbp,8mov [rbp],rax; 48; OPTN >>sar rax,48; $ffff; OPTN ANDand rax,65535; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 16; OPTN >>sar rax,16; $ffff; OPTN ANDand rax,65535; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; $ffff; OPTN ANDand rax,65535; 8; OPTN <<shl rax,8; ORor rax,[rbp]sub rbp,8; 8; OPTN <<shl rax,8; ORor rax,[rbp]sub rbp,8; ;ret;--------------------------; :mark  |3082|e     .  | calls:3 niv:0 len:14 (  --  )wC1:;---------OPT;---------ANA;---------GEN; hereadd rbp,8mov [rbp],raxmov rax,qword[wBE]; 0?or rax,raxjnz _o3; (; MEMadd rbp,8mov [rbp],raxmov rax,[FREE_MEM]; DUPadd rbp,8mov [rbp],rax; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; NIPsub rbp,8; )_o3:; memmap>; OPTV !+mov rbx,qword[wC0]mov [rbx],raxadd rbx,8mov rax,rbx; 'memmap>; OPTAV !mov qword[wC0],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :empty  |2092|e  ;  .  | calls:2 niv:0 len:19 (  --  )wC2:;---------OPT;---------ANA;---------GEN; memmap>add rbp,8mov [rbp],raxmov rax,qword[wC0]; 'memmap; OPTAV =?cmp rax,wBFjne _o4; (; DROPmov rax,[rbp]sub rbp,8; MEMadd rbp,8mov [rbp],raxmov rax,[FREE_MEM]; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; ;ret; )_o4:; 8; OPTN -sub rax,8; DUPadd rbp,8mov [rbp],rax; 'memmap>; OPTAV !mov qword[wC0],raxmov rax,[rbp]sub rbp,8; @mov rax,qword[rax]; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :,s  |6082|e     .  | calls:6 niv:0 len:13 ( a --  )wCC:;---------OPT;---------ANA;---------GEN; hereadd rbp,8mov [rbp],raxmov rax,qword[wBE]; SWAPxchg rax,[rbp]; (_i5:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o5;; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; C!+mov rcx,[rbp]mov byte[rax],cladd rax,1sub rbp,8; SWAPxchg rax,[rbp]; )jmp _i5_o5:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :sdl2  |1082|e     .  | calls:1 niv:0 len:199 (  --  )w189:;---------OPT;---------ANA;---------GEN; "SDL2.DLL"; OPTS LOADLIBcinvoke64 LoadLibraryA,str642B; DUPadd rbp,8mov [rbp],rax; "SDL_Init"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str6443; 'sys-SDL_Init; OPTAV !mov qword[w137],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_Quit"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str646B; 'sys-SDL_Quit; OPTAV !mov qword[w138],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_GetNumVideoDisplays"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str6493; 'sys-SDL_GetNumVideoDisplays; OPTAV !mov qword[w139],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_CreateWindow"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str64D9; 'sys-SDL_CreateWindow; OPTAV !mov qword[w13A],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_GetWindowSurface"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str6511; 'sys-SDL_GetWindowSurface; OPTAV !mov qword[w13B],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_ShowCursor"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str6551; 'sys-SDL_ShowCursor; OPTAV !mov qword[w13C],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_UpdateWindowSurface"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str6585; 'sys-SDL_UpdateWindowSurface; OPTAV !mov qword[w13D],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_DestroyWindow"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str65CB; 'sys-SDL_DestroyWindow; OPTAV !mov qword[w13E],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_CreateRenderer"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str6605; 'sys-SDL_CreateRenderer; OPTAV !mov qword[w13F],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_CreateTexture"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str6641; 'sys-SDL_CreateTexture; OPTAV !mov qword[w140],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_DestroyTexture"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str667B; 'sys-SDL_DestroyTexture; OPTAV !mov qword[w141],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_DestroyRenderer"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str66B7; 'sys-SDL_DestroyRenderer; OPTAV !mov qword[w142],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_UpdateTexture"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str66F5; 'sys-SDL_UpdateTexture; OPTAV !mov qword[w143],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderClear"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str672F; 'sys-SDL_RenderClear; OPTAV !mov qword[w144],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderCopy"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str6765; 'sys-SDL_RenderCopy; OPTAV !mov qword[w145],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderCopyEx"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str6799; 'sys-SDL_RenderCopyEx; OPTAV !mov qword[w146],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderPresent"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str67D1; 'sys-SDL_RenderPresent; OPTAV !mov qword[w147],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_CreateTextureFromSurface"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str680B; 'sys-SDL_CreateTextureFromSurface; OPTAV !mov qword[w149],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_QueryTexture"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str685B; 'sys-SDL_QueryTexture; OPTAV !mov qword[w14A],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_SetTextureColorMod"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str6893; 'sys-SDL_SetTextureColorMod; OPTAV !mov qword[w15F],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_SetRenderDrawColor"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str68D7; 'sys-SDL_SetRenderDrawColor; OPTAV !mov qword[w148],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_FreeSurface"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str691B; 'sys-SDL_FreeSurface; OPTAV !mov qword[w14B],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_LockTexture"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str6951; 'sys-SDL_LockTexture; OPTAV !mov qword[w14C],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_UnlockTexture"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str6987; 'sys-SDL_UnlockTexture; OPTAV !mov qword[w14D],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderSetLogicalSize"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str69C1; 'sys-SDL_RenderSetLogicalSize; OPTAV !mov qword[w14E],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_SetRenderDrawBlendMode"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str6A09; 'sys-SDL_SetRenderDrawBlendMode; OPTAV !mov qword[w14F],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderDrawPoint"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str6A55; 'sys-SDL_RenderDrawPoint; OPTAV !mov qword[w150],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderDrawLine"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str6A93; 'sys-SDL_RenderDrawLine; OPTAV !mov qword[w151],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderDrawRect"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str6ACF; 'sys-SDL_RenderDrawRect; OPTAV !mov qword[w152],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RenderFillRect"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str6B0B; 'sys-SDL_RenderFillRect; OPTAV !mov qword[w153],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_Delay"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str6B48; 'sys-SDL_Delay; OPTAV !mov qword[w154],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_PollEvent"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str6B72; 'sys-SDL_PollEvent; OPTAV !mov qword[w155],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_GetTicks"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str6BA4; 'sys-SDL_GetTicks; OPTAV !mov qword[w156],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_RWFromFile"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str6BD6; 'sys-SDL_RWFromFile; OPTAV !mov qword[w159],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_GL_SetAttribute"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str6C0C; 'sys-SDL_GL_SetAttribute; OPTAV !mov qword[w15A],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_GL_CreateContext"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str6C4A; 'sys-SDL_GL_CreateContext; OPTAV !mov qword[w15B],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_GL_DeleteContext"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str6C8A; 'sys-SDL_GL_DeleteContext; OPTAV !mov qword[w15C],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_GL_SetSwapInterval"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str6CCA; 'sys-SDL_GL_SetSwapInterval; OPTAV !mov qword[w15D],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SDL_GL_SwapWindow"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str6D0E; 'sys-SDL_GL_SwapWindow; OPTAV !mov qword[w15E],raxmov rax,[rbp]sub rbp,8; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :SDLinitGL  |1001482|e     . I| calls:1 niv:1 len:26 ( abc -- d )w193:;---------OPT;---------ANA;---------GEN; 'sh; OPTAV !mov qword[w18E],raxmov rax,[rbp]sub rbp,8; 'sw; OPTAV !mov qword[w18D],raxmov rax,[rbp]sub rbp,8; $3231add rbp,8mov [rbp],raxmov rax,12849; sys-SDL_Initadd rbp,8mov [rbp],raxmov rax,qword[w137]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rcx,[rbp]call raxadd RSP,$20sub rbp,8POP RSP; DROPmov rax,[rbp]sub rbp,8; $1FFF0000add rbp,8mov [rbp],raxmov rax,536805376; $1FFF0000add rbp,8mov [rbp],raxmov rax,536805376; swadd rbp,8mov [rbp],raxmov rax,qword[w18D]; shadd rbp,8mov [rbp],raxmov rax,qword[w18E]; 6add rbp,8mov [rbp],raxmov rax,6; sys-SDL_CreateWindowadd rbp,8mov [rbp],raxmov rax,qword[w13A]; SYS6PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$30mov rdx,[rbp]mov [rsp+$28],rdxmov rcx,[rbp-1*8]mov [rsp+$20],rcxmov r9,[rbp-2*8]mov r8,[rbp-3*8]mov rdx,[rbp-4*8]mov rcx,[rbp-5*8]call raxadd RSP,$30sub rbp,8*6POP RSP; DUPadd rbp,8mov [rbp],rax; 'SDL_windows; OPTAV !mov qword[w18A],raxmov rax,[rbp]sub rbp,8; sys-SDL_GetWindowSurfaceadd rbp,8mov [rbp],raxmov rax,qword[w13B]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rcx,[rbp]call raxadd RSP,$20sub rbp,8POP RSP; DUPadd rbp,8mov [rbp],rax; 'SDL_screen; OPTAV !mov qword[w18B],raxmov rax,[rbp]sub rbp,8; SDL_windowsadd rbp,8mov [rbp],raxmov rax,qword[w18A]; -1add rbp,8mov [rbp],raxmov rax,-1; 0add rbp,8mov [rbp],raxxor rax,rax; sys-SDL_CreateRendereradd rbp,8mov [rbp],raxmov rax,qword[w13F]; SYS3PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov r8,[rbp]mov rdx,[rbp-1*8]mov rcx,[rbp-2*8]call raxadd RSP,$20sub rbp,8*3POP RSP; 'SDLrenderer; OPTAV !mov qword[w18C],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :SDLupdate  |1001482|e     . I| calls:1 niv:1 len:103 (  --  )w19C:;---------OPT;---------ANA;---------GEN; 0add rbp,8mov [rbp],raxxor rax,rax; 'SDLkey; OPTAV !mov qword[w197],raxmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; 'SDLkeychar; OPTAV !mov qword[w198],raxmov rax,[rbp]sub rbp,8; 10add rbp,8mov [rbp],raxmov rax,10; sys-SDL_Delayadd rbp,8mov [rbp],raxmov rax,qword[w154]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rcx,[rbp]call raxadd RSP,$20sub rbp,8POP RSP; DROPmov rax,[rbp]sub rbp,8; (_i6:; 'SDLeventadd rbp,8mov [rbp],raxmov rax,w196; sys-SDL_PollEventadd rbp,8mov [rbp],raxmov rax,qword[w155]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rcx,[rbp]call raxadd RSP,$20sub rbp,8POP RSP; 1?or rax,raxjz _o6;; DROPmov rax,[rbp]sub rbp,8; 'SDLevent; OPTAV D@add rbp,8mov [rbp],raxmovsxd rax,dword [w196]; $300; OPTN =?cmp rax,768jne _o7; (; 'SDLeventadd rbp,8mov [rbp],raxmov rax,w196; 20; OPTN +add rax,20; D@movsxd rax,dword [rax]; DUPadd rbp,8mov [rbp],rax; $ffff; OPTN ANDand rax,65535; SWAPxchg rax,[rbp]; 16; OPTN >>sar rax,16; ORor rax,[rbp]sub rbp,8; 'SDLkey; OPTAV !mov qword[w197],raxmov rax,[rbp]sub rbp,8; )_o7:; $301; OPTN =?cmp rax,769jne _o8; (; 'SDLeventadd rbp,8mov [rbp],raxmov rax,w196; 20; OPTN +add rax,20; D@movsxd rax,dword [rax]; DUPadd rbp,8mov [rbp],rax; $ffff; OPTN ANDand rax,65535; SWAPxchg rax,[rbp]; 16; OPTN >>sar rax,16; ORor rax,[rbp]sub rbp,8; $1000; OPTN ORor rax,4096; 'SDLkey; OPTAV !mov qword[w197],raxmov rax,[rbp]sub rbp,8; )_o8:; $303; OPTN =?cmp rax,771jne _o9; (; 'SDLeventadd rbp,8mov [rbp],raxmov rax,w196; 12; OPTN +add rax,12; C@movsx rax,byte [rax]; 'SDLkeychar; OPTAV !mov qword[w198],raxmov rax,[rbp]sub rbp,8; )_o9:; $400; OPTN =?cmp rax,1024jne _oA; (; 'SDLeventadd rbp,8mov [rbp],raxmov rax,w196; 20; OPTN +add rax,20; D@+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; 'SDLx; OPTAV !mov qword[w199],raxmov rax,[rbp]sub rbp,8; D@movsxd rax,dword [rax]; 'SDLy; OPTAV !mov qword[w19A],raxmov rax,[rbp]sub rbp,8; )_oA:; $401; OPTN =?cmp rax,1025jne _oB; (; 'SDLeventadd rbp,8mov [rbp],raxmov rax,w196; 16; OPTN +add rax,16; C@movsx rax,byte [rax]; SDLb; OPTV ORmov rbx,qword[w19B]or rax,rbx; 'SDLb; OPTAV !mov qword[w19B],raxmov rax,[rbp]sub rbp,8; )_oB:; $402; OPTN =?cmp rax,1026jne _oC; (; 'SDLeventadd rbp,8mov [rbp],raxmov rax,w196; 16; OPTN +add rax,16; C@movsx rax,byte [rax]; NOTnot rax; SDLb; OPTV ANDmov rbx,qword[w19B]and rax,rbx; 'SDLb; OPTAV !mov qword[w19B],raxmov rax,[rbp]sub rbp,8; )_oC:; DROPmov rax,[rbp]sub rbp,8; )jmp _i6_o6:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :sdl2ttf  |1082|e     .  | calls:1 niv:0 len:74 (  --  )w1BC:;---------OPT;---------ANA;---------GEN; "SDL2_ttf.DLL"; OPTS LOADLIBcinvoke64 LoadLibraryA,str7CD9; DUPadd rbp,8mov [rbp],rax; "TTF_Init"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str7CF5; 'sys-TTF_Init; OPTAV !mov qword[w1A0],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "TTF_OpenFont"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str7D1D; 'sys-TTF_OpenFont; OPTAV !mov qword[w1A1],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "TTF_SetFontStyle"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str7D4D; 'sys-TTF_SetFontStyle; OPTAV !mov qword[w1A2],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "TTF_SetFontOutline"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str7D85; 'sys-TTF_SetFontOutline; OPTAV !mov qword[w1A3],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "TTF_SizeText"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str7DC1; 'sys-TTF_SizeText; OPTAV !mov qword[w1A4],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "TTF_SizeUTF8"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str7DF1; 'sys-TTF_SizeUTF8; OPTAV !mov qword[w1A5],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "TTF_RenderText_Solid"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str7E21; 'sys-TTF_RenderText_Solid; OPTAV !mov qword[w1A6],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "TTF_RenderUTF8_Solid"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str7E61; 'sys-TTF_RenderUTF8_Solid; OPTAV !mov qword[w1A7],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "TTF_RenderText_Shaded"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str7EA1; 'sys-TTF_RenderText_Shaded; OPTAV !mov qword[w1A8],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "TTF_RenderUTF8_Shaded"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str7EE3; 'sys-TTF_RenderUTF8_Shaded; OPTAV !mov qword[w1A9],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "TTF_RenderText_Blended"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str7F25; 'sys-TTF_RenderText_Blended; OPTAV !mov qword[w1AA],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "TTF_RenderUTF8_Blended"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str7F69; 'sys-TTF_RenderUTF8_Blended; OPTAV !mov qword[w1AB],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "TTF_CloseFont"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str7FAD; 'sys-TTF_CloseFont; OPTAV !mov qword[w1AC],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "TTF_Quit"; OPTS GETPROCcinvoke64 GetProcAddress,rax,str7FDF; 'sys-TTF_Quit; OPTAV !mov qword[w1AD],raxmov rax,[rbp]sub rbp,8; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :,time  |3001480|l     . I| calls:1 niv:3 len:21 (  --  )w236:;---------OPT;---------ANA;---------GEN; timecall wB1; DUPadd rbp,8mov [rbp],rax; 16; OPTN >>sar rax,16; $ff; OPTN ANDand rax,255; .dcall w9E; ,scall wCC; ":"add rbp,8mov [rbp],raxmov rax,strD5; ,scall wCC; DUPadd rbp,8mov [rbp],rax; 8; OPTN >>sar rax,8; $ff; OPTN ANDand rax,255; 10; OPTN <?cmp rax,10jge _oD; (; "0"add rbp,8mov [rbp],raxmov rax,str9F; ,scall wCC; )_oD:; .dcall w9E; ,scall wCC; ":"add rbp,8mov [rbp],raxmov rax,strF3; ,scall wCC; $ff; OPTN ANDand rax,255; 10; OPTN <?cmp rax,10jge _oE; (; "0"add rbp,8mov [rbp],raxmov rax,str9F; ,scall wCC; )_oE:; .dcall w9E; ,sjmp wCC; ;;--------------------------; :,date  |2001480|l     . I| calls:1 niv:2 len:21 (  --  )w237:;---------OPT;---------ANA;---------GEN; datecall wB2; DUPadd rbp,8mov [rbp],rax; $ff; OPTN ANDand rax,255; .dcall w9E; ,scall wCC; "/"add rbp,8mov [rbp],raxmov rax,str12C; ,scall wCC; DUPadd rbp,8mov [rbp],rax; 8; OPTN >>sar rax,8; $ff; OPTN ANDand rax,255; .dcall w9E; ,scall wCC; "/"add rbp,8mov [rbp],raxmov rax,str149; ,scall wCC; 16; OPTN >>sar rax,16; $ffff; OPTN ANDand rax,65535; .dcall w9E; ,sjmp wCC; ;;--------------------------; :RenderText  |1003484|l'    . I| calls:3 niv:1 len:32 ( abcdef --  )w23B:;---------OPT;---------ANA;---------GEN; SWAPxchg rax,[rbp]; 'textbox; OPTAV D!+mov rcx,w23Amov dword[rcx],eaxadd rcx,4mov rax,rcx; D!mov rcx,[rbp]mov dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; 'textboxadd rbp,8mov [rbp],raxmov rax,w23A; DUPadd rbp,8mov [rbp],rax; 8; OPTN +add rax,8; SWAPxchg rax,[rbp]; 12; OPTN +add rax,12; sys-TTF_SizeTextadd rbp,8mov [rbp],raxmov rax,qword[w1A4]; SYS4PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov r9,[rbp]mov r8,[rbp-1*8]mov rdx,[rbp-2*8]mov rcx,[rbp-3*8]call raxadd RSP,$20sub rbp,8*4POP RSP; DROPmov rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; DUPadd rbp,8mov [rbp],rax; $ffffff; OPTN ANDand rax,16777215; SWAPxchg rax,[rbp]; 32; OPTN >>sar rax,32; sys-TTF_RenderUTF8_Shadedadd rbp,8mov [rbp],raxmov rax,qword[w1A9]; SYS4PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov r9,[rbp]mov r8,[rbp-1*8]mov rdx,[rbp-2*8]mov rcx,[rbp-3*8]call raxadd RSP,$20sub rbp,8*4POP RSP; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; sys-SDL_CreateTextureFromSurfaceadd rbp,8mov [rbp],raxmov rax,qword[w149]; SYS2PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rdx,[rbp]mov rcx,[rbp-1*8]call raxadd RSP,$20POP RSP; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 0add rbp,8mov [rbp],raxxor rax,rax; 'textboxadd rbp,8mov [rbp],raxmov rax,w23A; sys-SDL_RenderCopyadd rbp,8mov [rbp],raxmov rax,qword[w145]; SYS4PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov r9,[rbp]mov r8,[rbp-1*8]mov rdx,[rbp-2*8]mov rcx,[rbp-3*8]call raxadd RSP,$20sub rbp,8*4POP RSP; DROPmov rax,[rbp]sub rbp,8; sys-SDL_DestroyTextureadd rbp,8mov [rbp],raxmov rax,qword[w141]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rcx,[rbp]call raxadd RSP,$20sub rbp,8POP RSP; DROPmov rax,[rbp]sub rbp,8; sys-SDL_FreeSurfaceadd rbp,8mov [rbp],raxmov rax,qword[w14B]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rcx,[rbp]call raxadd RSP,$20sub rbp,8POP RSP; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :datetime  |2001480|l     . I| calls:1 niv:2 len:29 (  --  )w23C:;---------OPT;---------ANA;---------GEN; SDLrendereradd rbp,8mov [rbp],raxmov rax,qword[w18C]; $ffffffadd rbp,8mov [rbp],raxmov rax,16777215; fontadd rbp,8mov [rbp],raxmov rax,qword[w238]; markcall wC1; 32add rbp,8mov [rbp],raxmov rax,32; here; OPTV C!+mov rbx,qword[wBE]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; ,datecall w237; 32add rbp,8mov [rbp],raxmov rax,32; here; OPTV C!+mov rbx,qword[wBE]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; here; OPTV C!+mov rbx,qword[wBE]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; emptycall wC2; hereadd rbp,8mov [rbp],raxmov rax,qword[wBE]; 40add rbp,8mov [rbp],raxmov rax,40; 40add rbp,8mov [rbp],raxmov rax,40; RenderTextcall w23B; SDLrendereradd rbp,8mov [rbp],raxmov rax,qword[w18C]; $ffffff00000000add rbp,8mov [rbp],raxmov rax,72057589742960640; fontadd rbp,8mov [rbp],raxmov rax,qword[w238]; markcall wC1; 32add rbp,8mov [rbp],raxmov rax,32; here; OPTV C!+mov rbx,qword[wBE]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; ,timecall w236; 32add rbp,8mov [rbp],raxmov rax,32; here; OPTV C!+mov rbx,qword[wBE]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; here; OPTV C!+mov rbx,qword[wBE]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; emptycall wC2; hereadd rbp,8mov [rbp],raxmov rax,qword[wBE]; 40add rbp,8mov [rbp],raxmov rax,40; shadd rbp,8mov [rbp],raxmov rax,qword[w18E]; 80; OPTN -sub rax,80; RenderTextjmp w23B; ;;--------------------------; :sajuste  |1002484|l'    . I| calls:2 niv:1 len:50 (  --  )w23F:;---------OPT;---------ANA;---------GEN; 'coladd rbp,8mov [rbp],raxmov rax,w23D; swadd rbp,8mov [rbp],raxmov rax,qword[w18D]; DUPadd rbp,8mov [rbp],rax; $92492493 ; calcadd rbp,8mov [rbp],raxmov rax,2454267027; $22 ; calc; OPTC *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,34; DUPadd rbp,8mov [rbp],rax; $3F ; calc; OPTC >>>shr rax,63; +add rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; $7 ; calc; OPTC *imul rax,7; -neg raxadd rax,[rbp]sub rbp,8; 1; OPTN >>sar rax,1; (_iF:; swadd rbp,8mov [rbp],raxmov rax,qword[w18D]; 8; OPTN -sub rax,8; <?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjge _oF; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; @+mov rbx,[rax]add rax,8add rbp,8mov [rbp],raxmov rax,rbx; SDLrendereradd rbp,8mov [rbp],raxmov rax,qword[w18C]; SWAPxchg rax,[rbp]; DUPadd rbp,8mov [rbp],rax; 16; OPTN >>sar rax,16; $ff; OPTN ANDand rax,255; SWAPxchg rax,[rbp]; DUPadd rbp,8mov [rbp],rax; 8; OPTN >>sar rax,8; $ff; OPTN ANDand rax,255; SWAPxchg rax,[rbp]; $ff; OPTN ANDand rax,255; $ffadd rbp,8mov [rbp],raxmov rax,255; sys-SDL_SetRenderDrawColoradd rbp,8mov [rbp],raxmov rax,qword[w148]; SYS5PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$28mov rcx,[rbp]mov [rsp+$20],rcxmov r9,[rbp-1*8]mov r8,[rbp-2*8]mov rdx,[rbp-3*8]mov rcx,[rbp-4*8]call raxadd RSP,$28sub rbp,8*5POP RSP; DROPmov rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; shadd rbp,8mov [rbp],raxmov rax,qword[w18E]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 0add rbp,8mov [rbp],raxxor rax,rax; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; 'rf; OPTAV D!+mov rcx,w23Emov dword[rcx],eaxadd rcx,4mov rax,rcx; D!+mov rcx,[rbp]mov dword[rax],ecxadd rax,4sub rbp,8; D!+mov rcx,[rbp]mov dword[rax],ecxadd rax,4sub rbp,8; D!mov rcx,[rbp]mov dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; SDLrendereradd rbp,8mov [rbp],raxmov rax,qword[w18C]; 'rfadd rbp,8mov [rbp],raxmov rax,w23E; sys-SDL_RenderFillRectadd rbp,8mov [rbp],raxmov rax,qword[w153]; SYS2PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rdx,[rbp]mov rcx,[rbp-1*8]call raxadd RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; +add rax,[rbp]sub rbp,8; )jmp _iF_oF:; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; ;ret;--------------------------; :main  |2001480|l     . I| calls:1 niv:2 len:13 (  --  )w240:;---------OPT; INLINE CTE;---------ANA;---------GEN; sajustecall w23F; (_i10:; SDLkeyadd rbp,8mov [rbp],raxmov rax,qword[w197]; $101b; OPTN <>?cmp rax,4123je _o10; DROPmov rax,[rbp]sub rbp,8; datetimecall w23C; SDLrendereradd rbp,8mov [rbp],raxmov rax,qword[w18C]; sys-SDL_RenderPresentadd rbp,8mov [rbp],raxmov rax,qword[w147]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rcx,[rbp]call raxadd RSP,$20sub rbp,8POP RSP; DROPmov rax,[rbp]sub rbp,8; SDLupdatecall w19C; )jmp _i10_o10:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :  |2001580|l     .iI| calls:1 niv:2 len:12 (  -- a )INICIO:;---------OPT;---------ANA;---------GEN; windowscall w43; sdl2call w189; sdl2ttfcall w1BC; markcall wC1; "r3sdl"add rbp,8mov [rbp],raxmov rax,str66C; 640add rbp,8mov [rbp],raxmov rax,640; 480add rbp,8mov [rbp],raxmov rax,480; SDLinitGLcall w193; sys-TTF_Initadd rbp,8mov [rbp],raxmov rax,qword[w1A0]; SYS0PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20CALL raxadd RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; "media/ttf/roboto-bold.ttf"add rbp,8mov [rbp],raxmov rax,str19D; 48add rbp,8mov [rbp],raxmov rax,48; sys-TTF_OpenFontadd rbp,8mov [rbp],raxmov rax,qword[w1A1]; SYS2PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rdx,[rbp]mov rcx,[rbp-1*8]call raxadd RSP,$20POP RSP; 'font; OPTAV !mov qword[w238],raxmov rax,[rbp]sub rbp,8; maincall w240; SDL_windowsadd rbp,8mov [rbp],raxmov rax,qword[w18A]; sys-SDL_DestroyWindowadd rbp,8mov [rbp],raxmov rax,qword[w13E]; SYS1PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20mov rcx,[rbp]call raxadd RSP,$20sub rbp,8POP RSP; DROPmov rax,[rbp]sub rbp,8; sys-SDL_Quitadd rbp,8mov [rbp],raxmov rax,qword[w138]; SYS0PUSH RSPPUSH qword [RSP]ADD RSP,8AND SPL,0F0hsub RSP,$20CALL raxadd RSP,$20POP RSP; DROPmov rax,[rbp]sub rbp,8; ;ret 