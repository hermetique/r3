;---r3 compiler code.asm; r3/demo/palindrome.r3;--------------------------; :windows  |1001482|e     . I| calls:1 niv:1 len:196 (  --  )w43:;---------OPT; A5BF18:"KERNEL32.DLL"	; [ ] ; A5BF1C:LOADLIB	; [ 1C93 ] ; A5BF20:DUP	; [ 1C93 ] ; A5BF24:"AllocConsole"	; [ 1C93 1C93 ] ; A5BF28:GETPROC	; [ 1C9302001C93 1CB0 ] ; A5BF2C:'sys-AllocConsole	; [ 1C9302001C93 1C93 ] ; A5BF30:!	; [ 1C9302001C93 0 ] ; A5BF34:DUP	; [ 1C9302001C93 ] ; A5BF38:"ExitProcess"	; [ 1C9302001C93 1C9302001C93 ] ; A5BF3C:GETPROC	; [ 1C9302001C93 1CE0 ] ; A5BF40:'sys-ExitProcess	; [ 1C9302001C93 1C9302001C93 ] ; A5BF44:!	; [ 1C9302001C93 1 ] ; A5BF48:DUP	; [ 1C9302001C93 ] ; A5BF4C:"GetStdHandle"	; [ 1C9302001C93 1C9302001C93 ] ; A5BF50:GETPROC	; [ 1C9302001C93 1D0F ] ; A5BF54:'sys-GetStdHandle	; [ 1C9302001C93 1C9302001C93 ] ; A5BF58:!	; [ 1C9302001C93 2 ] ; A5BF5C:DUP	; [ 1C9302001C93 ] ; A5BF60:"ReadFile"	; [ 1C9302001C93 1C9302001C93 ] ; A5BF64:GETPROC	; [ 1C9302001C93 1D41 ] ; A5BF68:'sys-ReadFile	; [ 1C9302001C93 1C9302001C93 ] ; A5BF6C:!	; [ 1C9302001C93 3 ] ; A5BF70:DUP	; [ 1C9302001C93 ] ; A5BF74:"WriteFile"	; [ 1C9302001C93 1C9302001C93 ] ; A5BF78:GETPROC	; [ 1C9302001C93 1D69 ] ; A5BF7C:'sys-WriteFile	; [ 1C9302001C93 1C9302001C93 ] ; A5BF80:!	; [ 1C9302001C93 4 ] ; A5BF84:DUP	; [ 1C9302001C93 ] ; A5BF88:"GetConsoleMode"	; [ 1C9302001C93 1C9302001C93 ] ; A5BF8C:GETPROC	; [ 1C9302001C93 1D95 ] ; A5BF90:'sys-GetConsoleMode	; [ 1C9302001C93 1C9302001C93 ] ; A5BF94:!	; [ 1C9302001C93 5 ] ; A5BF98:DUP	; [ 1C9302001C93 ] ; A5BF9C:"SetConsoleMode"	; [ 1C9302001C93 1C9302001C93 ] ; A5BFA0:GETPROC	; [ 1C9302001C93 1DC9 ] ; A5BFA4:'sys-SetConsoleMode	; [ 1C9302001C93 1C9302001C93 ] ; A5BFA8:!	; [ 1C9302001C93 6 ] ; A5BFAC:DUP	; [ 1C9302001C93 ] ; A5BFB0:"ReadConsoleInputW"	; [ 1C9302001C93 1C9302001C93 ] ; A5BFB4:GETPROC	; [ 1C9302001C93 1DFD ] ; A5BFB8:'sys-ReadConsoleInput	; [ 1C9302001C93 1C9302001C93 ] ; A5BFBC:!	; [ 1C9302001C93 7 ] ; A5BFC0:DUP	; [ 1C9302001C93 ] ; A5BFC4:"FlushConsoleInputBuffer"	; [ 1C9302001C93 1C9302001C93 ] ; A5BFC8:GETPROC	; [ 1C9302001C93 1E36 ] ; A5BFCC:'sys-FlushConsoleInputBuffer	; [ 1C9302001C93 1C9302001C93 ] ; A5BFD0:!	; [ 1C9302001C93 8 ] ; A5BFD4:DUP	; [ 1C9302001C93 ] ; A5BFD8:"Sleep"	; [ 1C9302001C93 1C9302001C93 ] ; A5BFDC:GETPROC	; [ 1C9302001C93 1E7C ] ; A5BFE0:'sys-Sleep	; [ 1C9302001C93 1C9302001C93 ] ; A5BFE4:!	; [ 1C9302001C93 9 ] ; A5BFE8:DUP	; [ 1C9302001C93 ] ; A5BFEC:"WaitForSingleObject"	; [ 1C9302001C93 1C9302001C93 ] ; A5BFF0:GETPROC	; [ 1C9302001C93 1E9E ] ; A5BFF4:'sys-WaitForSingleObject	; [ 1C9302001C93 1C9302001C93 ] ; A5BFF8:!	; [ 1C9302001C93 A ] ; A5BFFC:DUP	; [ 1C9302001C93 ] ; A5C000:"GetLastError"	; [ 1C9302001C93 1C9302001C93 ] ; A5C004:GETPROC	; [ 1C9302001C93 1EDD ] ; A5C008:'sys-GetLastError	; [ 1C9302001C93 1C9302001C93 ] ; A5C00C:!	; [ 1C9302001C93 B ] ; A5C010:DUP	; [ 1C9302001C93 ] ; A5C014:"CreateFileA"	; [ 1C9302001C93 1C9302001C93 ] ; A5C018:GETPROC	; [ 1C9302001C93 1F0E ] ; A5C01C:'sys-CreateFile	; [ 1C9302001C93 1C9302001C93 ] ; A5C020:!	; [ 1C9302001C93 C ] ; A5C024:DUP	; [ 1C9302001C93 ] ; A5C028:"CloseHandle"	; [ 1C9302001C93 1C9302001C93 ] ; A5C02C:GETPROC	; [ 1C9302001C93 1F3C ] ; A5C030:'sys-CloseHandle	; [ 1C9302001C93 1C9302001C93 ] ; A5C034:!	; [ 1C9302001C93 D ] ; A5C038:DUP	; [ 1C9302001C93 ] ; A5C03C:"FlushFileBuffers"	; [ 1C9302001C93 1C9302001C93 ] ; A5C040:GETPROC	; [ 1C9302001C93 1F6A ] ; A5C044:'sys-FlushFileBuffers	; [ 1C9302001C93 1C9302001C93 ] ; A5C048:!	; [ 1C9302001C93 E ] ; A5C04C:DUP	; [ 1C9302001C93 ] ; A5C050:"DeleteFileA"	; [ 1C9302001C93 1C9302001C93 ] ; A5C054:GETPROC	; [ 1C9302001C93 1FA2 ] ; A5C058:'sys-DeleteFile	; [ 1C9302001C93 1C9302001C93 ] ; A5C05C:!	; [ 1C9302001C93 F ] ; A5C060:DUP	; [ 1C9302001C93 ] ; A5C064:"MoveFileA"	; [ 1C9302001C93 1C9302001C93 ] ; A5C068:GETPROC	; [ 1C9302001C93 1FCF ] ; A5C06C:'sys-MoveFile	; [ 1C9302001C93 1C9302001C93 ] ; A5C070:!	; [ 1C9302001C93 10 ] ; A5C074:DUP	; [ 1C9302001C93 ] ; A5C078:"SetFilePointer"	; [ 1C9302001C93 1C9302001C93 ] ; A5C07C:GETPROC	; [ 1C9302001C93 1FF8 ] ; A5C080:'sys-SetFilePointer	; [ 1C9302001C93 1C9302001C93 ] ; A5C084:!	; [ 1C9302001C93 11 ] ; A5C088:DUP	; [ 1C9302001C93 ] ; A5C08C:"SetEndOfFile"	; [ 1C9302001C93 1C9302001C93 ] ; A5C090:GETPROC	; [ 1C9302001C93 202C ] ; A5C094:'sys-SetEndOfFile	; [ 1C9302001C93 1C9302001C93 ] ; A5C098:!	; [ 1C9302001C93 12 ] ; A5C09C:DUP	; [ 1C9302001C93 ] ; A5C0A0:"GetFileSize"	; [ 1C9302001C93 1C9302001C93 ] ; A5C0A4:GETPROC	; [ 1C9302001C93 205C ] ; A5C0A8:'sys-GetFileSize	; [ 1C9302001C93 1C9302001C93 ] ; A5C0AC:!	; [ 1C9302001C93 13 ] ; A5C0B0:DUP	; [ 1C9302001C93 ] ; A5C0B4:"GetProcessHeap"	; [ 1C9302001C93 1C9302001C93 ] ; A5C0B8:GETPROC	; [ 1C9302001C93 208B ] ; A5C0BC:'sys-GetProcessHeap	; [ 1C9302001C93 1C9302001C93 ] ; A5C0C0:!	; [ 1C9302001C93 14 ] ; A5C0C4:DUP	; [ 1C9302001C93 ] ; A5C0C8:"HeapAlloc"	; [ 1C9302001C93 1C9302001C93 ] ; A5C0CC:GETPROC	; [ 1C9302001C93 20BF ] ; A5C0D0:'sys-HeapAlloc	; [ 1C9302001C93 1C9302001C93 ] ; A5C0D4:!	; [ 1C9302001C93 15 ] ; A5C0D8:DUP	; [ 1C9302001C93 ] ; A5C0DC:"HeapFree"	; [ 1C9302001C93 1C9302001C93 ] ; A5C0E0:GETPROC	; [ 1C9302001C93 20E9 ] ; A5C0E4:'sys-HeapFree	; [ 1C9302001C93 1C9302001C93 ] ; A5C0E8:!	; [ 1C9302001C93 16 ] ; A5C0EC:DUP	; [ 1C9302001C93 ] ; A5C0F0:"HeapReAlloc"	; [ 1C9302001C93 1C9302001C93 ] ; A5C0F4:GETPROC	; [ 1C9302001C93 2111 ] ; A5C0F8:'sys-HeapReAlloc	; [ 1C9302001C93 1C9302001C93 ] ; A5C0FC:!	; [ 1C9302001C93 17 ] ; A5C100:DUP	; [ 1C9302001C93 ] ; A5C104:"GetLocalTime"	; [ 1C9302001C93 1C9302001C93 ] ; A5C108:GETPROC	; [ 1C9302001C93 2140 ] ; A5C10C:'sys-GetLocalTime	; [ 1C9302001C93 1C9302001C93 ] ; A5C110:!	; [ 1C9302001C93 19 ] ; A5C114:DUP	; [ 1C9302001C93 ] ; A5C118:"FindFirstFileA"	; [ 1C9302001C93 1C9302001C93 ] ; A5C11C:GETPROC	; [ 1C9302001C93 2170 ] ; A5C120:'sys-FindFirstFile	; [ 1C9302001C93 1C9302001C93 ] ; A5C124:!	; [ 1C9302001C93 1A ] ; A5C128:DUP	; [ 1C9302001C93 ] ; A5C12C:"FindNextFileA"	; [ 1C9302001C93 1C9302001C93 ] ; A5C130:GETPROC	; [ 1C9302001C93 21A3 ] ; A5C134:'sys-FindNextFile	; [ 1C9302001C93 1C9302001C93 ] ; A5C138:!	; [ 1C9302001C93 1B ] ; A5C13C:DUP	; [ 1C9302001C93 ] ; A5C140:"FindClose"	; [ 1C9302001C93 1C9302001C93 ] ; A5C144:GETPROC	; [ 1C9302001C93 21D4 ] ; A5C148:'sys-FindClose	; [ 1C9302001C93 1C9302001C93 ] ; A5C14C:!	; [ 1C9302001C93 1C ] ; A5C150:DUP	; [ 1C9302001C93 ] ; A5C154:"CreateProcessA"	; [ 1C9302001C93 1C9302001C93 ] ; A5C158:GETPROC	; [ 1C9302001C93 21FF ] ; A5C15C:'sys-CreateProcess	; [ 1C9302001C93 1C9302001C93 ] ; A5C160:!	; [ 1C9302001C93 1D ] ; A5C164:DUP	; [ 1C9302001C93 ] ; A5C168:"GetTickCount"	; [ 1C9302001C93 1C9302001C93 ] ; A5C16C:GETPROC	; [ 1C9302001C93 2232 ] ; A5C170:'sys-GetTickCount	; [ 1C9302001C93 1C9302001C93 ] ; A5C174:!	; [ 1C9302001C93 18 ] ; A5C178:DUP	; [ 1C9302001C93 ] ; A5C17C:"GetConsoleScreenBufferInfo"	; [ 1C9302001C93 1C9302001C93 ] ; A5C180:GETPROC	; [ 1C9302001C93 2262 ] ; A5C184:'sys-GetConsoleScreenBufferInfo	; [ 1C9302001C93 1C9302001C93 ] ; A5C188:!	; [ 1C9302001C93 1E ] ; A5C18C:DROP	; [ 1C9302001C93 ] ; A5C190:AllocConsole	; [ ] ; A5BD80:sys-AllocConsole	; [ ] ; A5BD84:SYS0	; [ 0 ] ; A5BD88:DROP	; [ 0 ] ; A5C194:-10	; [ ] ; A5C198:GetStdHandle	; [ 0 ] ; A5BD9C:sys-GetStdHandle	; [ 0 ] ; A5BDA0:SYS1	; [ 0 2 ] ; A5C19C:'stdin	; [ 0 ] ; A5C1A0:!	; [ 0 40 ] ; A5C1A4:-11	; [ ] ; A5C1A8:GetStdHandle	; [ 1 ] ; A5BD9C:sys-GetStdHandle	; [ 1 ] ; A5BDA0:SYS1	; [ 1 2 ] ; A5C1AC:'stdout	; [ 1 ] ; A5C1B0:!	; [ 1 41 ] ; A5C1B4:-12	; [ ] ; A5C1B8:GetStdHandle	; [ 2 ] ; A5BD9C:sys-GetStdHandle	; [ 2 ] ; A5BDA0:SYS1	; [ 2 2 ] ; A5C1BC:'stderr	; [ 2 ] ; A5C1C0:!	; [ 2 42 ] ; A5C1C4:stdin	; [ ] ; A5C1C8:'console-mode	; [ 40 ] ; A5C1CC:GetConsoleMode	; [ 40 3E ] ; A5BDC0:sys-GetConsoleMode	; [ 40 3E ] ; A5BDC4:SYS2	; [ 3E03000040 5 ] ; A5C1D0:DROP	; [ 3E03000040 ] ; A5C1D4:stdin	; [ ] ; A5C1D8:console-mode	; [ 40 ] ; A5C1DC:$1a	; [ 40 3E ] ; A5C1E0:NEG	; [ 3E04000040 3 ] ; A5C1E4:AND	; [ 3E04000040 3 ] ; A5C1E8:SetConsoleMode	; [ 3E04000040 3E ] ; A5BDCC:sys-SetConsoleMode	; [ 3E04000040 3E ] ; A5BDD0:SYS2	; [ 3E04000040 6 ] ; A5C1EC:DROP	; [ 3E04000040 ] ; A5C1F0:stdout	; [ ] ; A5C1F4:'console-mode	; [ 41 ] ; A5C1F8:GetConsoleMode	; [ 41 3E ] ; A5BDC0:sys-GetConsoleMode	; [ 41 3E ] ; A5BDC4:SYS2	; [ 3E03000041 5 ] ; A5C1FC:DROP	; [ 3E03000041 ] ; A5C200:stdout	; [ ] ; A5C204:console-mode	; [ 41 ] ; A5C208:$4	; [ 41 3E ] ; A5C20C:OR	; [ 3E04000041 4 ] ; A5C210:SetConsoleMode	; [ 3E04000041 3E ] ; A5BDCC:sys-SetConsoleMode	; [ 3E04000041 3E ] ; A5BDD0:SYS2	; [ 3E04000041 6 ] ; A5C214:DROP	; [ 3E04000041 ] ; A5C218:GetProcessHeap	; [ ] ; A5BE80:sys-GetProcessHeap	; [ ] ; A5BE84:SYS0	; [ 14 ] ; A5C21C:'process-heap	; [ 14 ] ; A5C220:!	; [ 14 3F ] ; A5C224:;	; [ ] ;---------ANA;---------GEN; "KERNEL32.DLL"add rbp,8mov [rbp],raxmov rax,str1C93; LOADLIBinvoke LoadLibraryA,rax; DUPadd rbp,8mov [rbp],rax; "AllocConsole"add rbp,8mov [rbp],raxmov rax,str1CB0; GETPROCinvoke GetProcAddress,rax,qword[rbp]sub ebp,8; 'sys-AllocConsole; OPTAV !mov qword[w0],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "ExitProcess"add rbp,8mov [rbp],raxmov rax,str1CE0; GETPROCinvoke GetProcAddress,rax,qword[rbp]sub ebp,8; 'sys-ExitProcess; OPTAV !mov qword[w1],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetStdHandle"add rbp,8mov [rbp],raxmov rax,str1D0F; GETPROCinvoke GetProcAddress,rax,qword[rbp]sub ebp,8; 'sys-GetStdHandle; OPTAV !mov qword[w2],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "ReadFile"add rbp,8mov [rbp],raxmov rax,str1D41; GETPROCinvoke GetProcAddress,rax,qword[rbp]sub ebp,8; 'sys-ReadFile; OPTAV !mov qword[w3],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "WriteFile"add rbp,8mov [rbp],raxmov rax,str1D69; GETPROCinvoke GetProcAddress,rax,qword[rbp]sub ebp,8; 'sys-WriteFile; OPTAV !mov qword[w4],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetConsoleMode"add rbp,8mov [rbp],raxmov rax,str1D95; GETPROCinvoke GetProcAddress,rax,qword[rbp]sub ebp,8; 'sys-GetConsoleMode; OPTAV !mov qword[w5],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SetConsoleMode"add rbp,8mov [rbp],raxmov rax,str1DC9; GETPROCinvoke GetProcAddress,rax,qword[rbp]sub ebp,8; 'sys-SetConsoleMode; OPTAV !mov qword[w6],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "ReadConsoleInputW"add rbp,8mov [rbp],raxmov rax,str1DFD; GETPROCinvoke GetProcAddress,rax,qword[rbp]sub ebp,8; 'sys-ReadConsoleInput; OPTAV !mov qword[w7],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "FlushConsoleInputBuffer"add rbp,8mov [rbp],raxmov rax,str1E36; GETPROCinvoke GetProcAddress,rax,qword[rbp]sub ebp,8; 'sys-FlushConsoleInputBuffer; OPTAV !mov qword[w8],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "Sleep"add rbp,8mov [rbp],raxmov rax,str1E7C; GETPROCinvoke GetProcAddress,rax,qword[rbp]sub ebp,8; 'sys-Sleep; OPTAV !mov qword[w9],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "WaitForSingleObject"add rbp,8mov [rbp],raxmov rax,str1E9E; GETPROCinvoke GetProcAddress,rax,qword[rbp]sub ebp,8; 'sys-WaitForSingleObject; OPTAV !mov qword[wA],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetLastError"add rbp,8mov [rbp],raxmov rax,str1EDD; GETPROCinvoke GetProcAddress,rax,qword[rbp]sub ebp,8; 'sys-GetLastError; OPTAV !mov qword[wB],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "CreateFileA"add rbp,8mov [rbp],raxmov rax,str1F0E; GETPROCinvoke GetProcAddress,rax,qword[rbp]sub ebp,8; 'sys-CreateFile; OPTAV !mov qword[wC],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "CloseHandle"add rbp,8mov [rbp],raxmov rax,str1F3C; GETPROCinvoke GetProcAddress,rax,qword[rbp]sub ebp,8; 'sys-CloseHandle; OPTAV !mov qword[wD],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "FlushFileBuffers"add rbp,8mov [rbp],raxmov rax,str1F6A; GETPROCinvoke GetProcAddress,rax,qword[rbp]sub ebp,8; 'sys-FlushFileBuffers; OPTAV !mov qword[wE],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "DeleteFileA"add rbp,8mov [rbp],raxmov rax,str1FA2; GETPROCinvoke GetProcAddress,rax,qword[rbp]sub ebp,8; 'sys-DeleteFile; OPTAV !mov qword[wF],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "MoveFileA"add rbp,8mov [rbp],raxmov rax,str1FCF; GETPROCinvoke GetProcAddress,rax,qword[rbp]sub ebp,8; 'sys-MoveFile; OPTAV !mov qword[w10],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SetFilePointer"add rbp,8mov [rbp],raxmov rax,str1FF8; GETPROCinvoke GetProcAddress,rax,qword[rbp]sub ebp,8; 'sys-SetFilePointer; OPTAV !mov qword[w11],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "SetEndOfFile"add rbp,8mov [rbp],raxmov rax,str202C; GETPROCinvoke GetProcAddress,rax,qword[rbp]sub ebp,8; 'sys-SetEndOfFile; OPTAV !mov qword[w12],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetFileSize"add rbp,8mov [rbp],raxmov rax,str205C; GETPROCinvoke GetProcAddress,rax,qword[rbp]sub ebp,8; 'sys-GetFileSize; OPTAV !mov qword[w13],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetProcessHeap"add rbp,8mov [rbp],raxmov rax,str208B; GETPROCinvoke GetProcAddress,rax,qword[rbp]sub ebp,8; 'sys-GetProcessHeap; OPTAV !mov qword[w14],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "HeapAlloc"add rbp,8mov [rbp],raxmov rax,str20BF; GETPROCinvoke GetProcAddress,rax,qword[rbp]sub ebp,8; 'sys-HeapAlloc; OPTAV !mov qword[w15],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "HeapFree"add rbp,8mov [rbp],raxmov rax,str20E9; GETPROCinvoke GetProcAddress,rax,qword[rbp]sub ebp,8; 'sys-HeapFree; OPTAV !mov qword[w16],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "HeapReAlloc"add rbp,8mov [rbp],raxmov rax,str2111; GETPROCinvoke GetProcAddress,rax,qword[rbp]sub ebp,8; 'sys-HeapReAlloc; OPTAV !mov qword[w17],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetLocalTime"add rbp,8mov [rbp],raxmov rax,str2140; GETPROCinvoke GetProcAddress,rax,qword[rbp]sub ebp,8; 'sys-GetLocalTime; OPTAV !mov qword[w19],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "FindFirstFileA"add rbp,8mov [rbp],raxmov rax,str2170; GETPROCinvoke GetProcAddress,rax,qword[rbp]sub ebp,8; 'sys-FindFirstFile; OPTAV !mov qword[w1A],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "FindNextFileA"add rbp,8mov [rbp],raxmov rax,str21A3; GETPROCinvoke GetProcAddress,rax,qword[rbp]sub ebp,8; 'sys-FindNextFile; OPTAV !mov qword[w1B],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "FindClose"add rbp,8mov [rbp],raxmov rax,str21D4; GETPROCinvoke GetProcAddress,rax,qword[rbp]sub ebp,8; 'sys-FindClose; OPTAV !mov qword[w1C],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "CreateProcessA"add rbp,8mov [rbp],raxmov rax,str21FF; GETPROCinvoke GetProcAddress,rax,qword[rbp]sub ebp,8; 'sys-CreateProcess; OPTAV !mov qword[w1D],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetTickCount"add rbp,8mov [rbp],raxmov rax,str2232; GETPROCinvoke GetProcAddress,rax,qword[rbp]sub ebp,8; 'sys-GetTickCount; OPTAV !mov qword[w18],raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "GetConsoleScreenBufferInfo"add rbp,8mov [rbp],raxmov rax,str2262; GETPROCinvoke GetProcAddress,rax,qword[rbp]sub ebp,8; 'sys-GetConsoleScreenBufferInfo; OPTAV !mov qword[w1E],raxmov rax,[rbp]sub rbp,8; DROPmov rax,[rbp]sub rbp,8; sys-AllocConsoleadd rbp,8mov [rbp],raxmovsxd rax,dword[w0]; SYS0call rax; DROPmov rax,[rbp]sub rbp,8; -10add rbp,8mov [rbp],raxmov rax,-10; sys-GetStdHandleadd rbp,8mov [rbp],raxmovsxd rax,dword[w2]; SYS1cinvoke rax,qword[rbp]sub ebp,8; 'stdin; OPTAV !mov qword[w40],raxmov rax,[rbp]sub rbp,8; -11add rbp,8mov [rbp],raxmov rax,-11; sys-GetStdHandleadd rbp,8mov [rbp],raxmovsxd rax,dword[w2]; SYS1invoke rax,qword[rbp]sub ebp,8; 'stdout; OPTAV !mov qword[w41],raxmov rax,[rbp]sub rbp,8; -12add rbp,8mov [rbp],raxmov rax,-12; sys-GetStdHandleadd rbp,8mov [rbp],raxmovsxd rax,dword[w2]; SYS1invoke rax,qword[rbp]sub ebp,8; 'stderr; OPTAV !mov qword[w42],raxmov rax,[rbp]sub rbp,8; stdinadd rbp,8mov [rbp],raxmovsxd rax,dword[w40]; 'console-modeadd rbp,8mov [rbp],raxmov rax,w3E; sys-GetConsoleModeadd rbp,8mov [rbp],raxmovsxd rax,dword[w5]; SYS2invoke rax,qword[rbp],qword[rbp-1*8]sub ebp,8*2; DROPmov rax,[rbp]sub rbp,8; stdinadd rbp,8mov [rbp],raxmovsxd rax,dword[w40]; console-modeadd rbp,8mov [rbp],raxmovsxd rax,dword[w3E]; $FFFFFFFFFFFFFFE6 ; calc; OPTC ANDand rax,-26; sys-SetConsoleModeadd rbp,8mov [rbp],raxmovsxd rax,dword[w6]; SYS2invoke rax,qword[rbp],qword[rbp-1*8]sub ebp,8*2; DROPmov rax,[rbp]sub rbp,8; stdoutadd rbp,8mov [rbp],raxmovsxd rax,dword[w41]; 'console-modeadd rbp,8mov [rbp],raxmov rax,w3E; sys-GetConsoleModeadd rbp,8mov [rbp],raxmovsxd rax,dword[w5]; SYS2invoke rax,qword[rbp],qword[rbp-1*8]sub ebp,8*2; DROPmov rax,[rbp]sub rbp,8; stdoutadd rbp,8mov [rbp],raxmovsxd rax,dword[w41]; console-modeadd rbp,8mov [rbp],raxmovsxd rax,dword[w3E]; $4; OPTN ORor rax,4; sys-SetConsoleModeadd rbp,8mov [rbp],raxmovsxd rax,dword[w6]; SYS2invoke rax,qword[rbp],qword[rbp-1*8]sub ebp,8*2; DROPmov rax,[rbp]sub rbp,8; sys-GetProcessHeapadd rbp,8mov [rbp],raxmovsxd rax,dword[w14]; SYS0call rax; 'process-heap; OPTAV !mov qword[w3F],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :10/mod  |3082|e     .  | calls:3 niv:0 len:49 ( a -- bc )w7E:;---------OPT; A5D1D8:DUP	; [ 0 ] ; A5D1DC:1	; [ 0 0 ] ; A5D1E0:>>	; [ 5000000 0 ] ; A5D1E4:OVER	; [ 5000000 0 ] ; A5D1E8:2	; [ 5000000 5000000 ] ; A5D1EC:>>	; [ 5000000 5000000 1 ] ; A5D1F0:+	; [ 5000000 5000000 ] ; A5D1F4:DUP	; [ 5000000 5000000 ] ; A5D1F8:4	; [ 5000000 5000000 ] ; A5D1FC:>>	; [ 5000000 5000000 2 ] ; A5D200:+	; [ 5000000 5000000 ] ; A5D204:DUP	; [ 5000000 5000000 ] ; A5D208:8	; [ 5000000 5000000 ] ; A5D20C:>>	; [ 5000000 5000000 3 ] ; A5D210:+	; [ 5000000 5000000 ] ; A5D214:DUP	; [ 5000000 5000000 ] ; A5D218:16	; [ 5000000 5000000 ] ; A5D21C:>>	; [ 5000000 5000000 4 ] ; A5D220:+	; [ 5000000 5000000 ] ; A5D224:DUP	; [ 5000000 5000000 ] ; A5D228:32	; [ 5000000 5000000 ] ; A5D22C:>>	; [ 5000000 5000000 5 ] ; A5D230:+	; [ 5000000 5000000 ] ; A5D234:3	; [ 5000000 5000000 ] ; A5D238:>>	; [ 5000000 6 ] ; A5D23C:OVER	; [ 5000000 5000000 ] ; A5D240:OVER	; [ 5000000 5000000 ] ; A5D244:DUP	; [ 5000000 5000000 5000000 ] ; A5D248:2	; [ 5000000 5000000 5000000 ] ; A5D24C:<<	; [ 5000000 5000000 5000000 7 ] ; A5D250:+	; [ 5000000 5000000 5000000 ] ; A5D254:1	; [ 5000000 5000000 5000000 ] ; A5D258:<<	; [ 5000000 5000000 8 ] ; A5D25C:-	; [ 5000000 5000000 5000000 ] ; A5D260:6	; [ 5000000 5000000 ] ; A5D264:+	; [ 5000000 5000000 9 ] ; A5D268:4	; [ 5000000 5000000 ] ; A5D26C:>>	; [ 5000000 5000000 A ] ; A5D270:+	; [ 5000000 5000000 ] ; A5D274:SWAP	; [ 5000000 5000000 ] ; A5D278:OVER	; [ 5000000 5000000 ] ; A5D27C:DUP	; [ 5000000 5000000 ] ; A5D280:2	; [ 5000000 5000000 5000000 ] ; A5D284:<<	; [ 5000000 5000000 B ] ; A5D288:+	; [ 5000000 5000000 5000000 ] ; A5D28C:1	; [ 5000000 5000000 ] ; A5D290:<<	; [ 5000000 5000000 C ] ; A5D294:-	; [ 5000000 5000000 ] ; A5D298:;	; [ 5000000 5000000 ] ;---------ANA;---------GEN; DUPadd rbp,8mov [rbp],rax; 1; OPTN >>sar rax,1; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 2; OPTN >>sar rax,2; +add rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 4; OPTN >>sar rax,4; +add rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 8; OPTN >>sar rax,8; +add rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 16; OPTN >>sar rax,16; +add rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 32; OPTN >>sar rax,32; +add rax,[rbp]sub rbp,8; 3; OPTN >>sar rax,3; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; DUPadd rbp,8mov [rbp],rax; 2; OPTN <<shl rax,2; +add rax,[rbp]sub rbp,8; 1; OPTN <<shl rax,1; -neg raxadd rax,[rbp]sub rbp,8; 6; OPTN +add rax,6; 4; OPTN >>sar rax,4; +add rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; DUPadd rbp,8mov [rbp],rax; 2; OPTN <<shl rax,2; +add rax,[rbp]sub rbp,8; 1; OPTN <<shl rax,1; -neg raxadd rax,[rbp]sub rbp,8; ;ret;--------------------------; :count  |1082|e     .  | calls:1 niv:0 len:13 ( a -- bc )w91:;---------OPT; A5D564:0	; [ 0 ] ; A5D568:OVER	; [ 0 0 ] ; A5D56C:(	; [ 0 0 ] ; A5D570:C@+	; [ 0 0 ] ; A5D574:1?	; [ 0 0 0 ] ; A5D578:DROP	; [ 0 0 0 ] ; A5D57C:SWAP	; [ 0 0 ] ; A5D580:1	; [ 5000000 5000000 ] ; A5D584:+	; [ 5000000 5000000 1 ] ; A5D588:SWAP	; [ 5000000 5000000 ] ; A5D58C:)	; [ 0 0 ] ; A5D590:2DROP	; [ 0 0 0 ] ; A5D594:;	; [ 0 5000000 ] ;---------ANA;---------GEN; 0add rbp,8mov [rbp],raxxor rax,rax; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; (_i0:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o0; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; 1; OPTN +add rax,1; SWAPxchg rax,[rbp]; )jmp _i0_o0:; 2DROPmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :sign  |2090|l  ;  .  | calls:2 niv:0 len:12 ( ab -- c )w9D:;---------OPT; A5D914:-?	; [ 1 0 ] ; A5D918:(	; [ 1 0 ] ; A5D91C:DROP	; [ 1 0 ] ; A5D920:$2d	; [ 1 ] ; A5D924:OVER	; [ 1 0 ] ; A5D928:C!	; [ 1 1 ] ; A5D92C:;	; [ 1 ] ; A5D930:)	; [ 1 ] ; A5D934:DROP	; [ 1 0 ] ; A5D938:1	; [ 1 ] ; A5D93C:+	; [ 1 1 ] ; A5D940:;	; [ 1 ] ;---------ANA;---------GEN; -?or rax,raxjns _o1; (; DROPmov rax,[rbp]sub rbp,8; $2dadd rbp,8mov [rbp],raxmov rax,45; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; ;ret; )_o1:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; ;ret;--------------------------; :.d  |1003492|e  ;  . I| calls:3 niv:1 len:26 ( a -- b )w9E:;---------OPT; A5D944:DUP	; [ 0 ] ; A5D948:ABS	; [ 0 0 ] ; A5D94C:-?	; [ 0 0 ] ; A5D950:(	; [ 0 0 ] ; A5D954:2DROP	; [ 0 0 ] ; A5D958:"-9223372036854775808"	; [ ] ; A5D95C:;	; [ 2D80 ] ; A5D960:)	; [ 2D80 ] ; A5D964:mbuffi	; [ 0 0 ] ; A5D8F0:'mbuff	; [ 0 0 ] ; A5D8F4:64	; [ 5000000 9B ] ; A5D8F8:+	; [ 5000000 9B 0 ] ; A5D8FC:0	; [ 5000000 9B ] ; A5D900:OVER	; [ 5000000 9B 1 ] ; A5D904:C!	; [ 5000000 10000009B 10000009B ] ; A5D908:1	; [ 5000000 10000009B ] ; A5D90C:-	; [ 5000000 10000009B 2 ] ; A5D968:SWAP	; [ 5000000 10000009B ] ; A5D96C:(	; [ 9B03000000 9B03000000 ] ; A5D970:10/mod	; [ 9B03000000 9B03000000 ] ; A5D974:$30	; [ 9B03000000 1 0 ] ; A5D978:+	; [ 9B03000000 5000001 3 ] ; A5D97C:PICK2	; [ 9B03000000 5000001 0 ] ; A5D980:C!	; [ 9B03000000 5000001 10500009B ] ; A5D984:SWAP	; [ 9B03000000 5000001 ] ; A5D988:1	; [ 105000000 10500009B ] ; A5D98C:-	; [ 105000000 10500009B 4 ] ; A5D990:SWAP	; [ 105000000 10500009B ] ; A5D994:1?	; [ 9B03000000 9B03000001 ] ; A5D998:)	; [ 9B03000000 9B03000001 ] ; A5D99C:DROP	; [ 9B03000000 9B03000001 ] ; A5D9A0:SWAP	; [ 9B03000000 10500009B ] ; A5D9A4:sign	; [ 10500009B 9B03000000 ] ; A5D9A8:;	; [ 0 ] ;---------ANA;---------GEN; DUPadd rbp,8mov [rbp],rax; ABScqoadd rax,rdxxor rax,rdx; -?or rax,raxjns _o2; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; "-9223372036854775808"add rbp,8mov [rbp],raxmov rax,str2D80; ;ret; )_o2:; 'mbuffadd rbp,8mov [rbp],raxmov rax,w9B; 64; OPTN +add rax,64; 0add rbp,8mov [rbp],raxxor rax,rax; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; (_i3:; 10/modcall w7E; $30; OPTN +add rax,48; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; 1?or rax,raxjz _o3; )jmp _i3_o3:; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; signjmp w9D; ;;--------------------------; :.b  |1001482|e     . I| calls:1 niv:1 len:22 ( a -- b )w9F:;---------OPT; A5D9AC:mbuffi	; [ 0 ] ; A5D8F0:'mbuff	; [ 0 ] ; A5D8F4:64	; [ 0 9B ] ; A5D8F8:+	; [ 9B03000000 0 ] ; A5D8FC:0	; [ 9B03000000 9B ] ; A5D900:OVER	; [ 9B03000000 1 ] ; A5D904:C!	; [ 9B03000000 1 10000009B ] ; A5D908:1	; [ 9B03000000 10000009B ] ; A5D90C:-	; [ 9B03000000 2 ] ; A5D9B0:SWAP	; [ 9B03000000 10000009B ] ; A5D9B4:(	; [ 10000009B 9B03000000 ] ; A5D9B8:DUP	; [ 10000009B 9B03000000 ] ; A5D9BC:$1	; [ 500009B 9B03000000 ] ; A5D9C0:AND	; [ 500009B 9B03000000 3 ] ; A5D9C4:$30	; [ 500009B 9B03000000 ] ; A5D9C8:+	; [ 500009B 9B03000000 4 ] ; A5D9CC:PICK2	; [ 500009B 9B03000000 ] ; A5D9D0:C!	; [ 500009B 9B03000000 500009B ] ; A5D9D4:SWAP	; [ 500009B 5000000 ] ; A5D9D8:1	; [ 5000000 500009B ] ; A5D9DC:-	; [ 9B03000000 5 ] ; A5D9E0:SWAP	; [ 9B03000000 500009B ] ; A5D9E4:1	; [ 500009B 9B03000000 ] ; A5D9E8:>>>	; [ 500009B 6 ] ; A5D9EC:1?	; [ 500009B 9B03000000 ] ; A5D9F0:)	; [ 500009B 9B03000000 ] ; A5D9F4:DROP	; [ 500009B 9B03000000 ] ; A5D9F8:1	; [ 500009B ] ; A5D9FC:+	; [ 500009B 7 ] ; A5DA00:;	; [ 500009B ] ;---------ANA;---------GEN; 'mbuffadd rbp,8mov [rbp],raxmov rax,w9B; 64; OPTN +add rax,64; 0add rbp,8mov [rbp],raxxor rax,rax; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; (_i4:; DUPadd rbp,8mov [rbp],rax; $1; OPTN ANDand rax,1; $30; OPTN +add rax,48; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; 1; OPTN >>>shr rax,1; 1?or rax,raxjz _o4; )jmp _i4_o4:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; ;ret;--------------------------; :.h  |1001482|e     . I| calls:1 niv:1 len:28 ( a -- b )wA0:;---------OPT; A5DA04:mbuffi	; [ 0 ] ; A5D8F0:'mbuff	; [ 0 ] ; A5D8F4:64	; [ 0 9B ] ; A5D8F8:+	; [ 9B03000000 0 ] ; A5D8FC:0	; [ 9B03000000 9B ] ; A5D900:OVER	; [ 9B03000000 1 ] ; A5D904:C!	; [ 9B03000000 1 10000009B ] ; A5D908:1	; [ 9B03000000 10000009B ] ; A5D90C:-	; [ 9B03000000 2 ] ; A5DA08:SWAP	; [ 9B03000000 10000009B ] ; A5DA0C:(	; [ 10000009B 9B03000000 ] ; A5DA10:DUP	; [ 10000009B 9B03000000 ] ; A5DA14:$f	; [ 500009B 9B03000000 ] ; A5DA18:AND	; [ 500009B 9B03000000 3 ] ; A5DA1C:$30	; [ 500009B 9B03000000 ] ; A5DA20:+	; [ 500009B 9B03000000 4 ] ; A5DA24:$39	; [ 500009B 9B03000000 ] ; A5DA28:>?	; [ 500009B 9B03000000 5 ] ; A5DA2C:(	; [ 500009B 9B03000000 ] ; A5DA30:7	; [ 500009B 9B03000000 ] ; A5DA34:+	; [ 500009B 9B03000000 6 ] ; A5DA38:)	; [ 500009B 9B03000000 ] ; A5DA3C:PICK2	; [ 500009B 9B03000000 ] ; A5DA40:C!	; [ 500009B 9B03000000 500009B ] ; A5DA44:SWAP	; [ 500009B 5000000 ] ; A5DA48:1	; [ 5000000 500009B ] ; A5DA4C:-	; [ 9B03000000 7 ] ; A5DA50:SWAP	; [ 9B03000000 500009B ] ; A5DA54:4	; [ 500009B 9B03000000 ] ; A5DA58:>>>	; [ 500009B 8 ] ; A5DA5C:1?	; [ 500009B 9B03000000 ] ; A5DA60:)	; [ 500009B 9B03000000 ] ; A5DA64:DROP	; [ 500009B 9B03000000 ] ; A5DA68:1	; [ 500009B ] ; A5DA6C:+	; [ 500009B 9 ] ; A5DA70:;	; [ 500009B ] ;---------ANA;---------GEN; 'mbuffadd rbp,8mov [rbp],raxmov rax,w9B; 64; OPTN +add rax,64; 0add rbp,8mov [rbp],raxxor rax,rax; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; (_i5:; DUPadd rbp,8mov [rbp],rax; $f; OPTN ANDand rax,15; $30; OPTN +add rax,48; $39; OPTN >?cmp rax,57jle _o6; (; 7; OPTN +add rax,7; )_o6:; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; 4; OPTN >>>shr rax,4; 1?or rax,raxjz _o600000005; )jmp _i5_o5:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; ;ret;--------------------------; :.o  |1001482|e     . I| calls:1 niv:1 len:22 ( a -- b )wA1:;---------OPT; A5DA74:mbuffi	; [ 0 ] ; A5D8F0:'mbuff	; [ 0 ] ; A5D8F4:64	; [ 0 9B ] ; A5D8F8:+	; [ 9B03000000 0 ] ; A5D8FC:0	; [ 9B03000000 9B ] ; A5D900:OVER	; [ 9B03000000 1 ] ; A5D904:C!	; [ 9B03000000 1 10000009B ] ; A5D908:1	; [ 9B03000000 10000009B ] ; A5D90C:-	; [ 9B03000000 2 ] ; A5DA78:SWAP	; [ 9B03000000 10000009B ] ; A5DA7C:(	; [ 10000009B 9B03000000 ] ; A5DA80:DUP	; [ 10000009B 9B03000000 ] ; A5DA84:$7	; [ 500009B 9B03000000 ] ; A5DA88:AND	; [ 500009B 9B03000000 3 ] ; A5DA8C:$30	; [ 500009B 9B03000000 ] ; A5DA90:+	; [ 500009B 9B03000000 4 ] ; A5DA94:PICK2	; [ 500009B 9B03000000 ] ; A5DA98:C!	; [ 500009B 9B03000000 500009B ] ; A5DA9C:SWAP	; [ 500009B 5000000 ] ; A5DAA0:1	; [ 5000000 500009B ] ; A5DAA4:-	; [ 9B03000000 5 ] ; A5DAA8:SWAP	; [ 9B03000000 500009B ] ; A5DAAC:3	; [ 500009B 9B03000000 ] ; A5DAB0:>>>	; [ 500009B 6 ] ; A5DAB4:1?	; [ 500009B 9B03000000 ] ; A5DAB8:)	; [ 500009B 9B03000000 ] ; A5DABC:DROP	; [ 500009B 9B03000000 ] ; A5DAC0:1	; [ 500009B ] ; A5DAC4:+	; [ 500009B 7 ] ; A5DAC8:;	; [ 500009B ] ;---------ANA;---------GEN; 'mbuffadd rbp,8mov [rbp],raxmov rax,w9B; 64; OPTN +add rax,64; 0add rbp,8mov [rbp],raxxor rax,rax; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; (_i7:; DUPadd rbp,8mov [rbp],rax; $7; OPTN ANDand rax,7; $30; OPTN +add rax,48; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; 3; OPTN >>>shr rax,3; 1?or rax,raxjz _o600000007; )jmp _i7_o7:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; ;ret;--------------------------; :.f  |1001482|e     . I| calls:1 niv:1 len:49 ( a -- b )wA2:;---------OPT; A5DACC:mbuffi	; [ 0 ] ; A5D8F0:'mbuff	; [ 0 ] ; A5D8F4:64	; [ 0 9B ] ; A5D8F8:+	; [ 9B03000000 0 ] ; A5D8FC:0	; [ 9B03000000 9B ] ; A5D900:OVER	; [ 9B03000000 1 ] ; A5D904:C!	; [ 9B03000000 1 10000009B ] ; A5D908:1	; [ 9B03000000 10000009B ] ; A5D90C:-	; [ 9B03000000 2 ] ; A5DAD0:OVER	; [ 9B03000000 10000009B ] ; A5DAD4:$ffff	; [ 9B03000000 9B03000000 ] ; A5DAD8:AND	; [ 9B03000000 9B03000000 3 ] ; A5DADC:10000	; [ 9B03000000 9B03000000 ] ; A5DAE0:16	; [ 9B03000000 9B03000000 4 ] ; A5DAE4:*>>	; [ 9B03000000 400000000 5 ] ; A5DAE8:10000	; [ 9B03000000 400000000 ] ; A5DAEC:+	; [ 9B03000000 400000000 6 ] ; A5DAF0:(	; [ 9B03000000 400000000 ] ; A5DAF4:10/mod	; [ 9B03000000 400000000 ] ; A5DAF8:$30	; [ 9B03000000 1 0 ] ; A5DAFC:+	; [ 9B03000000 5000001 7 ] ; A5DB00:PICK2	; [ 9B03000000 5000001 0 ] ; A5DB04:C!	; [ 9B03000000 5000001 10500009B ] ; A5DB08:SWAP	; [ 9B03000000 5000001 ] ; A5DB0C:1	; [ 105000000 10500009B ] ; A5DB10:-	; [ 105000000 10500009B 8 ] ; A5DB14:SWAP	; [ 105000000 10500009B ] ; A5DB18:1?	; [ 9B03000000 9B03000001 ] ; A5DB1C:)	; [ 9B03000000 9B03000001 ] ; A5DB20:DROP	; [ 9B03000000 9B03000001 ] ; A5DB24:1	; [ 9B03000000 10500009B ] ; A5DB28:+	; [ 9B03000000 9 ] ; A5DB2C:$2e	; [ 9B03000000 10500009B ] ; A5DB30:OVER	; [ 9B03000000 A ] ; A5DB34:C!	; [ 9B03000000 A A0000009B ] ; A5DB38:1	; [ 9B03000000 A0000009B ] ; A5DB3C:-	; [ 9B03000000 B ] ; A5DB40:OVER	; [ 9B03000000 A0000009B ] ; A5DB44:ABS	; [ 9B03000000 9B03000000 ] ; A5DB48:16	; [ 9B03000000 9B03000000 ] ; A5DB4C:>>	; [ 9B03000000 9B03000000 C ] ; A5DB50:(	; [ 9B03000000 9B03000000 ] ; A5DB54:10/mod	; [ 9B03000000 9B03000000 ] ; A5DB58:$30	; [ 9B03000000 1 0 ] ; A5DB5C:+	; [ 9B03000000 5000001 D ] ; A5DB60:PICK2	; [ 9B03000000 5000001 0 ] ; A5DB64:C!	; [ 9B03000000 5000001 10500009B ] ; A5DB68:SWAP	; [ 9B03000000 5000001 ] ; A5DB6C:1	; [ 105000000 10500009B ] ; A5DB70:-	; [ 105000000 10500009B E ] ; A5DB74:SWAP	; [ 105000000 10500009B ] ; A5DB78:1?	; [ 9B03000000 9B03000001 ] ; A5DB7C:)	; [ 9B03000000 9B03000001 ] ; A5DB80:DROP	; [ 9B03000000 9B03000001 ] ; A5DB84:SWAP	; [ 9B03000000 10500009B ] ; A5DB88:sign	; [ 10500009B 9B03000000 ] ; A5DB8C:;	; [ 0 ] ;---------ANA;---------GEN; 'mbuffadd rbp,8mov [rbp],raxmov rax,w9B; 64; OPTN +add rax,64; 0add rbp,8mov [rbp],raxxor rax,rax; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; 1; OPTN -sub rax,1; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; $ffff; OPTN ANDand rax,65535; 10000add rbp,8mov [rbp],raxmov rax,10000; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; 10000; OPTN +add rax,10000; (_i8:; 10/modcall w7E; $30; OPTN +add rax,48; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; 1?or rax,raxjz _o600000008; )jmp _i8_o8:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; $2eadd rbp,8mov [rbp],raxmov rax,46; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; 1; OPTN -sub rax,1; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; ABScqoadd rax,rdxxor rax,rdx; 16; OPTN >>sar rax,16; (_i9:; 10/modcall w7E; $30; OPTN +add rax,48; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; 1?or rax,raxjz _o600000009; )jmp _i9_o9:; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; signjmp w9D; ;;--------------------------; :mark  |1082|e     .  | calls:1 niv:0 len:14 (  --  )wC1:;---------OPT; A5E190:here	; [ ] ; A5E194:0?	; [ BE ] ; A5E198:(	; [ BE ] ; A5E19C:MEM	; [ BE ] ; A5E1A0:DUP	; [ BE 0 ] ; A5E1A4:'here	; [ 10000BE 0 ] ; A5E1A8:!	; [ 10000BE 0 BE ] ; A5E1AC:NIP	; [ 10000BE 1000000 ] ; A5E1B0:)	; [ 1000000 ] ; A5E1B4:memmap>	; [ BE ] ; A5E1B8:!+	; [ BE C0 ] ; A5E1BC:'memmap>	; [ BE ] ; A5E1C0:!	; [ BE C0 ] ; A5E1C4:;	; [ ] ;---------ANA;---------GEN; hereadd rbp,8mov [rbp],raxmovsxd rax,dword[wBE]; 0?or rax,raxjnz _oA; (; MEMadd rbp,8mov [rbp],raxmov rax,[FREE_MEM]; DUPadd rbp,8mov [rbp],rax; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; NIPsub rbp,8; )_oA:; memmap>; OPTV !+movsxd rbx,dword[wC0]mov [rcx],raxadd rcx,8mov rax,rcx; 'memmap>; OPTAV !mov qword[wC0],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :empty  |1092|e  ;  .  | calls:1 niv:0 len:19 (  --  )wC2:;---------OPT; A5E1C8:memmap>	; [ ] ; A5E1CC:'memmap	; [ C0 ] ; A5E1D0:=?	; [ C0 BF ] ; A5E1D4:(	; [ C0 ] ; A5E1D8:DROP	; [ C0 ] ; A5E1DC:MEM	; [ ] ; A5E1E0:'here	; [ 0 ] ; A5E1E4:!	; [ 0 BE ] ; A5E1E8:;	; [ ] ; A5E1EC:)	; [ ] ; A5E1F0:8	; [ C0 ] ; A5E1F4:-	; [ C0 0 ] ; A5E1F8:DUP	; [ C0 ] ; A5E1FC:'memmap>	; [ C0 C0 ] ; A5E200:!	; [ C0040000C0 C0 ] ; A5E204:@	; [ C0040000C0 ] ; A5E208:'here	; [ C0040000C0 ] ; A5E20C:!	; [ C0040000C0 BE ] ; A5E210:;	; [ ] ;---------ANA;---------GEN; memmap>add rbp,8mov [rbp],raxmovsxd rax,dword[wC0]; 'memmap; OPTAV =?cmp rax,wBFjne _oB; (; DROPmov rax,[rbp]sub rbp,8; MEMadd rbp,8mov [rbp],raxmov rax,[FREE_MEM]; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; ;ret; )_oB:; 8; OPTN -sub rax,8; DUPadd rbp,8mov [rbp],rax; 'memmap>; OPTAV !mov qword[wC0],raxmov rax,[rbp]sub rbp,8; @mov rax,qword[rax]; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :,s  |8082|e     .  | calls:8 niv:0 len:13 ( a --  )wCC:;---------OPT; A5E32C:here	; [ 0 ] ; A5E330:SWAP	; [ 0 BE ] ; A5E334:(	; [ BE 0 ] ; A5E338:C@+	; [ BE 0 ] ; A5E33C:1?	; [ 50000BE 0 ] ; A5E340:ROT	; [ 50000BE 0 ] ; A5E344:C!+	; [ 0 50000BE ] ; A5E348:SWAP	; [ 0 5000000 ] ; A5E34C:)	; [ 5000000 0 ] ; A5E350:2DROP	; [ 5000000 0 ] ; A5E354:'here	; [ 5000000 ] ; A5E358:!	; [ 5000000 BE ] ; A5E35C:;	; [ ] ;---------ANA;---------GEN; hereadd rbp,8mov [rbp],raxmovsxd rax,dword[wBE]; SWAPxchg rax,[rbp]; (_iC:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o60000000C; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; C!+mov rcx,[rbp]mov byte[rax],cladd rax,1sub rbp,8; SWAPxchg rax,[rbp]; )jmp _iC_oC:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :,w  |1082|e     .  | calls:1 niv:0 len:16 ( a --  )wCD:;---------OPT; A5E360:here	; [ 0 ] ; A5E364:SWAP	; [ 0 BE ] ; A5E368:(	; [ BE 0 ] ; A5E36C:C@+	; [ BE 0 ] ; A5E370:$ff	; [ 50000BE 0 ] ; A5E374:AND	; [ 50000BE 0 0 ] ; A5E378:32	; [ 50000BE 0 ] ; A5E37C:>?	; [ 50000BE 0 1 ] ; A5E380:ROT	; [ 50000BE 0 ] ; A5E384:C!+	; [ 5000000 50000BE ] ; A5E388:SWAP	; [ 5000000 5000000 ] ; A5E38C:)	; [ 5000000 5000000 ] ; A5E390:2DROP	; [ 5000000 0 ] ; A5E394:'here	; [ 5000000 ] ; A5E398:!	; [ 5000000 BE ] ; A5E39C:;	; [ ] ;---------ANA;---------GEN; hereadd rbp,8mov [rbp],raxmovsxd rax,dword[wBE]; SWAPxchg rax,[rbp]; (_iD:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $ff; OPTN ANDand rax,255; 32; OPTN >?cmp rax,32jle _o60000000D; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; C!+mov rcx,[rbp]mov byte[rax],cladd rax,1sub rbp,8; SWAPxchg rax,[rbp]; )jmp _iD_oD:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :,l  |1092|e  ;  .  | calls:1 niv:0 len:27 ( a --  )wCE:;---------OPT; A5E3A0:here	; [ 0 ] ; A5E3A4:SWAP	; [ 0 BE ] ; A5E3A8:(	; [ BE 0 ] ; A5E3AC:C@+	; [ BE 0 ] ; A5E3B0:1?	; [ 50000BE 0 ] ; A5E3B4:10	; [ 50000BE 0 ] ; A5E3B8:=?	; [ 50000BE 0 0 ] ; A5E3BC:(	; [ 50000BE 0 ] ; A5E3C0:3	; [ 50000BE 0 ] ; A5E3C4:+	; [ 50000BE 0 1 ] ; A5E3C8:)	; [ 50000BE 0 ] ; A5E3CC:13	; [ 50000BE 0 ] ; A5E3D0:=?	; [ 50000BE 0 2 ] ; A5E3D4:(	; [ 50000BE 0 ] ; A5E3D8:2DROP	; [ 50000BE 0 ] ; A5E3DC:'here	; [ 50000BE ] ; A5E3E0:!	; [ 50000BE BE ] ; A5E3E4:;	; [ ] ; A5E3E8:)	; [ ] ; A5E3EC:ROT	; [ 50000BE 0 ] ; A5E3F0:C!+	; [ 5000000 50000BE ] ; A5E3F4:SWAP	; [ 5000000 5000000 ] ; A5E3F8:)	; [ 5000000 5000000 ] ; A5E3FC:2DROP	; [ 5000000 0 ] ; A5E400:'here	; [ 5000000 ] ; A5E404:!	; [ 5000000 BE ] ; A5E408:;	; [ ] ;---------ANA;---------GEN; hereadd rbp,8mov [rbp],raxmovsxd rax,dword[wBE]; SWAPxchg rax,[rbp]; (_iE:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o60000000E; 10; OPTN =?cmp rax,10jne _oF; (; 3; OPTN +add rax,3; )_oF:; 13; OPTN =?cmp rax,13jne _o10; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; ;ret; )_o10:; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; C!+mov rcx,[rbp]mov byte[rax],cladd rax,1sub rbp,8; SWAPxchg rax,[rbp]; )jmp _iE_oE:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :c0  |1084|l'    .  | calls:1 niv:0 len:1 (  --  )wD8:;---------OPT; A5E478:;	; [ ] ;---------ANA;---------GEN; ;ret;--------------------------; :c1  |1084|l'    .  | calls:1 niv:0 len:1 (  --  )wD9:;---------OPT; A5E47C:;	; [ ] ;---------ANA;---------GEN; ;ret;--------------------------; :c2  |1001084|l'    .  | calls:1 niv:1 len:4 ( ab -- c )wDA:;---------OPT; A5E480:SWAP	; [ 1 0 ] ; A5E484:.b	; [ 0 1 ] ; A5E488:,s	; [ 0 0 ] ; A5E48C:;	; [ 0 ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; .bcall w9F; ,sjmp wCC; ;;--------------------------; :c3  |1001094|l' ;  .  | calls:1 niv:1 len:8 ( ab -- c )wDB:;---------OPT; A5E490:SWAP	; [ 1 0 ] ; A5E494:0?	; [ 0 1 ] ; A5E498:(	; [ 0 1 ] ; A5E49C:DROP	; [ 0 1 ] ; A5E4A0:;	; [ 0 ] ; A5E4A4:)	; [ 0 ] ; A5E4A8:,s	; [ 0 1 ] ; A5E4AC:;	; [ 0 ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; 0?or rax,raxjnz _o11; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o11:; ,sjmp wCC; ;;--------------------------; :c4  |1001084|l'    .  | calls:1 niv:1 len:4 ( ab -- c )wDC:;---------OPT; A5E4B0:SWAP	; [ 1 0 ] ; A5E4B4:.d	; [ 0 1 ] ; A5E4B8:,s	; [ 0 0 ] ; A5E4BC:;	; [ 0 ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; .dcall w9E; ,sjmp wCC; ;;--------------------------; :c5  |1001484|l'    . I| calls:1 niv:1 len:3 (  --  )wDD:;---------OPT; A5E4C0:$25	; [ ] ; A5E4C4:,c	; [ 0 ] ; A5E304:here	; [ 0 ] ; A5E308:C!+	; [ 0 BE ] ; A5E30C:'here	; [ 0 ] ; A5E310:!	; [ 0 BE ] ; A5E4C8:;	; [ ] ;---------ANA;---------GEN; $25add rbp,8mov [rbp],raxmov rax,37; here; OPTV C!+movsxd rbx,dword[wBE]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :c6  |1001084|l'    .  | calls:1 niv:1 len:4 ( ab -- c )wDE:;---------OPT; A5E4CC:SWAP	; [ 1 0 ] ; A5E4D0:.f	; [ 0 1 ] ; A5E4D4:,s	; [ 0 0 ] ; A5E4D8:;	; [ 0 ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; .fcall wA2; ,sjmp wCC; ;;--------------------------; :c7  |1001094|l' ;  .  | calls:1 niv:1 len:8 ( ab -- c )wDF:;---------OPT; A5E4DC:SWAP	; [ 1 0 ] ; A5E4E0:0?	; [ 0 1 ] ; A5E4E4:(	; [ 0 1 ] ; A5E4E8:DROP	; [ 0 1 ] ; A5E4EC:;	; [ 0 ] ; A5E4F0:)	; [ 0 ] ; A5E4F4:,w	; [ 0 1 ] ; A5E4F8:;	; [ 0 ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; 0?or rax,raxjnz _o12; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o12:; ,wjmp wCD; ;;--------------------------; :c8  |1001084|l'    .  | calls:1 niv:1 len:4 ( ab -- c )wE0:;---------OPT; A5E4FC:SWAP	; [ 1 0 ] ; A5E500:.h	; [ 0 1 ] ; A5E504:,s	; [ 0 0 ] ; A5E508:;	; [ 0 ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; .hcall wA0; ,sjmp wCC; ;;--------------------------; :c9  |1001084|l'    .  | calls:1 niv:1 len:6 ( ab -- c )wE1:;---------OPT; A5E50C:SWAP	; [ 1 0 ] ; A5E510:16	; [ 0 1 ] ; A5E514:>>	; [ 105000000 0 ] ; A5E518:.d	; [ 105000000 1 ] ; A5E51C:,s	; [ 105000000 0 ] ; A5E520:;	; [ 105000000 ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; 16; OPTN >>sar rax,16; .dcall w9E; ,sjmp wCC; ;;--------------------------; :ca  |1001084|l'    .  | calls:1 niv:1 len:6 ( ab -- c )wE2:;---------OPT; A5E524:SWAP	; [ 1 0 ] ; A5E528:$ffff	; [ 0 1 ] ; A5E52C:AND	; [ 105000000 0 ] ; A5E530:.d	; [ 105000000 1 ] ; A5E534:,s	; [ 105000000 0 ] ; A5E538:;	; [ 105000000 ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; $ffff; OPTN ANDand rax,65535; .dcall w9E; ,sjmp wCC; ;;--------------------------; :cb  |1001484|l'    . I| calls:1 niv:1 len:3 ( ab -- c )wE3:;---------OPT; A5E53C:SWAP	; [ 1 0 ] ; A5E540:,c	; [ 0 1 ] ; A5E304:here	; [ 0 1 ] ; A5E308:C!+	; [ 105000000 BE ] ; A5E30C:'here	; [ 105000000 1 ] ; A5E310:!	; [ 105000000 BE ] ; A5E544:;	; [ 105000000 ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; here; OPTV C!+movsxd rbx,dword[wBE]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :cc  |1001094|l' ;  .  | calls:1 niv:1 len:8 ( ab -- c )wE4:;---------OPT; A5E548:SWAP	; [ 1 0 ] ; A5E54C:0?	; [ 0 1 ] ; A5E550:(	; [ 0 1 ] ; A5E554:DROP	; [ 0 1 ] ; A5E558:;	; [ 0 ] ; A5E55C:)	; [ 0 ] ; A5E560:,l	; [ 0 1 ] ; A5E564:;	; [ 0 ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; 0?or rax,raxjnz _o13; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o13:; ,ljmp wCE; ;;--------------------------; :cd  |1084|l'    .  | calls:1 niv:0 len:1 (  --  )wE5:;---------OPT; A5E568:;	; [ ] ;---------ANA;---------GEN; ;ret;--------------------------; :ce  |1001484|l'    . I| calls:1 niv:1 len:3 (  --  )wE6:;---------OPT; A5E56C:13	; [ ] ; A5E570:,c	; [ 0 ] ; A5E304:here	; [ 0 ] ; A5E308:C!+	; [ 0 BE ] ; A5E30C:'here	; [ 0 ] ; A5E310:!	; [ 0 BE ] ; A5E574:;	; [ ] ;---------ANA;---------GEN; 13add rbp,8mov [rbp],raxmov rax,13; here; OPTV C!+movsxd rbx,dword[wBE]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :cf  |1001084|l'    .  | calls:1 niv:1 len:4 ( ab -- c )wE7:;---------OPT; A5E578:SWAP	; [ 1 0 ] ; A5E57C:.o	; [ 0 1 ] ; A5E580:,s	; [ 0 0 ] ; A5E584:;	; [ 0 ] ;---------ANA;---------GEN; SWAPxchg rax,[rbp]; .ocall wA1; ,sjmp wCC; ;;--------------------------; :,emit  |6001490|l  ;  . I| calls:1 niv:6 len:17 ( ab -- c )wE9:;---------OPT; A5E5C8:$25	; [ 1 0 ] ; A5E5CC:<>?	; [ 5000001 0 ] ; A5E5D0:(	; [ 5000001 0 ] ; A5E5D4:,c	; [ 5000001 0 ] ; A5E304:here	; [ 5000001 0 ] ; A5E308:C!+	; [ 5000001 BE ] ; A5E30C:'here	; [ 5000001 0 ] ; A5E310:!	; [ 5000001 BE ] ; A5E5D8:;	; [ 5000001 ] ; A5E5DC:)	; [ 5000001 ] ; A5E5E0:DROP	; [ 5000001 0 ] ; A5E5E4:C@+	; [ 5000001 ] ; A5E5E8:$f	; [ 5000001 5000001 ] ; A5E5EC:AND	; [ 105000001 1 ] ; A5E5F0:3	; [ 105000001 5000001 ] ; A5E5F4:<<	; [ 105000001 2 ] ; A5E5F8:'control	; [ 105000001 5000001 ] ; A5E5FC:+	; [ 105000001 E8 ] ; A5E600:@	; [ 105000001 5000001 ] ; A5E604:EX	; [ 105000001 5000001 ] ; A5E608:;	; [ 105000001 5000001 ] ;---------ANA;---------GEN; $25; OPTN <>?cmp rax,37je _o14; (; here; OPTV C!+movsxd rbx,dword[wBE]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; ;ret; )_o14:; DROPmov rax,[rbp]sub rbp,8; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $f; OPTN ANDand rax,15; 3; OPTN <<shl rax,3; 'control; OPTAV +add rax,wE8; @mov rax,qword[rax]; EXmov rcx,raxmov rax,[rbp]sub rbp,8jmp rcx; ;;--------------------------; :testp  |1080|l     .  | calls:1 niv:0 len:15 ( a -- b )w136:;---------OPT; A5EBAC:0	; [ 0 ] ; A5EBB0:OVER	; [ 0 0 ] ; A5EBB4:(	; [ 0 0 ] ; A5EBB8:10	; [ 0 0 ] ; A5EBBC:/MOD	; [ 0 0 1 ] ; A5EBC0:ROT	; [ 0 0 1 ] ; A5EBC4:10	; [ 5000000 100000000 5000000 ] ; A5EBC8:*	; [ 5000000 0 2 ] ; A5EBCC:+	; [ 5000000 0 5000000 ] ; A5EBD0:SWAP	; [ 5000000 0 ] ; A5EBD4:1?	; [ 0 0 ] ; A5EBD8:)	; [ 0 0 ] ; A5EBDC:DROP	; [ 0 0 ] ; A5EBE0:-	; [ 0 0 ] ; A5EBE4:;	; [ 0 ] ;---------ANA;---------GEN; 0add rbp,8mov [rbp],raxxor rax,rax; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; (_i15:; DUPadd rbp,8mov [rbp],rax; $66666667 ; calcadd rbp,8mov [rbp],raxmov rax,1717986919; $22 ; calc; OPTC *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,34; DUPadd rbp,8mov [rbp],rax; $3F ; calc; OPTC >>>shr rax,63; +add rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; $A ; calc; OPTC *imul rax,10; -neg raxadd rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; 10; OPTN *imul rax,10; +add rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; 1?or rax,raxjz _o1000000015; )jmp _i15_o15:; DROPmov rax,[rbp]sub rbp,8; -neg raxadd rax,[rbp]sub rbp,8; ;ret;--------------------------; :printcapi  |3001490|l  ;  . I| calls:1 niv:3 len:12 ( a -- b )w137:;---------OPT; A5EBE8:DUP	; [ 0 ] ; A5EBEC:testp	; [ 0 0 ] ; A5EBF0:1?	; [ 0 0 ] ; A5EBF4:(	; [ 0 0 ] ; A5EBF8:DROP	; [ 0 0 ] ; A5EBFC:;	; [ 0 ] ; A5EC00:)	; [ 0 ] ; A5EC04:DROP	; [ 0 0 ] ; A5EC08:DUP	; [ 0 ] ; A5EC0C:"%d "	; [ 0 0 ] ; A5EC10:.print	; [ 5000000 B6 ] ; A5E828:sprint	; [ 5000000 B6 ] ; A5E630:mark	; [ 5000000 B6 ] ; A5E634:'buff	; [ 5000000 B6 ] ; A5E638:'here	; [ 5000000 B6 EB ] ; A5E63C:!	; [ 5000000 EB030000B6 BE ] ; A5E640:,print	; [ 5000000 EB030000B6 ] ; A5E60C:(	; [ 5000000 EB030000B6 ] ; A5E610:C@+	; [ 5000000 EB030000B6 ] ; A5E614:1?	; [ 5000000 EB030000B6 EB030000B6 ] ; A5E618:,emit	; [ 5000000 EB030000B6 EB030000B6 ] ; A5E61C:)	; [ 5000000 0 ] ; A5E620:2DROP	; [ 5000000 EB030000B6 EB030000B6 ] ; A5E644:,eol	; [ 5000000 B602000000 ] ; A5E44C:0	; [ 5000000 B602000000 ] ; A5E450:,c	; [ 5000000 0 ] ; A5E304:here	; [ 5000000 0 ] ; A5E308:C!+	; [ 5000000 0 BE ] ; A5E30C:'here	; [ 5000000 0 ] ; A5E310:!	; [ 5000000 0 BE ] ; A5E648:empty	; [ 5000000 0 ] ; A5E64C:'buff	; [ 5000000 0 ] ; A5E82C:count	; [ 5000000 EB ] ; A5E830:type	; [ 5000000 1 0 ] ; A5E68C:stdout	; [ 5000000 1 0 ] ; A5E690:ROT	; [ 5000000 5000001 41 ] ; A5E694:ROT	; [ 5000000 0 5000001 ] ; A5E698:0	; [ 5000000 4104000000 0 ] ; A5E69C:0	; [ 5000000 4104000000 0 1 ] ; A5E6A0:WriteFile	; [ 5000000 4104000000 100000000 2 ] ; A5BDB4:sys-WriteFile	; [ 5000000 4104000000 100000000 2 ] ; A5BDB8:SYS5	; [ 5000000 4104000000 100000000 2 4 ] ; A5E6A4:DROP	; [ 5000000 4104000000 ] ; A5EC14:;	; [ 5000000 0 ] ;---------ANA;---------GEN; DUPadd rbp,8mov [rbp],rax; testpcall w136; 1?or rax,raxjz _o16; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o16:; DROPmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; "%d "add rbp,8mov [rbp],raxmov rax,strB6; markcall wC1; 'buffadd rbp,8mov [rbp],raxmov rax,wEB; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; (_i17:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o1000000017; ,emitcall wE9; )jmp _i17_o17:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 0add rbp,8mov [rbp],raxxor rax,rax; here; OPTV C!+movsxd rbx,dword[wBE]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov qword[wBE],raxmov rax,[rbp]sub rbp,8; emptycall wC2; 'buffadd rbp,8mov [rbp],raxmov rax,wEB; countcall w91; stdoutadd rbp,8mov [rbp],raxmovsxd rax,dword[w41]; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; 0add rbp,8mov [rbp],raxxor rax,rax; 0add rbp,8mov [rbp],raxxor rax,rax; sys-WriteFileadd rbp,8mov [rbp],raxmovsxd rax,dword[w4]; SYS5invoke rax,qword[rbp],qword[rbp-1*8],qword[rbp-2*8],qword[rbp-3*8],qword[rbp-4*8]sub ebp,8*5; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :  |4001180|l     .i | calls:1 niv:4 len:11 (  --  )INICIO:;---------OPT; A5EC18:windows	; [ ] ; A5EC1C:0	; [ ] ; A5EC20:(	; [ 0 ] ; A5EC24:500000	; [ 0 ] ; A5EC28:<?	; [ 0 1 ] ; A5EC2C:printcapi	; [ 0 ] ; A5EC30:1	; [ 0 ] ; A5EC34:+	; [ 0 2 ] ; A5EC38:)	; [ 0 ] ; A5EC3C:DROP	; [ 0 ] ; A5EC40:;	; [ ] ;---------ANA;---------GEN; windowscall w43; 0add rbp,8mov [rbp],raxxor rax,rax; (_i18:; 500000; OPTN <?cmp rax,500000jge _o1000000018; printcapicall w137; 1; OPTN +add rax,1; )jmp _i18_o18:; DROPmov rax,[rbp]sub rbp,8; ;ret 